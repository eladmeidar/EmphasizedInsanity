<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Emphasized Insanity</title>
 <link href="http://blog.eizesus.com/feed/atom.xml" rel="self"/>
 <link href="http://blog.eizesus.com/"/>
 <updated>2010-01-07T11:52:20-05:00</updated>
 <id>http://blog.eizesus.com/</id>
 <author>
   <name>Elad Meidar</name>
   <email>elad@eizesus.com</email>
 </author>
 
 
 <entry>
   <title>Bag O' Links - 7/1/2010</title>
   <link href="http://blog.eizesus.com/2010/1/bag-o-links-7-1-2010"/>
   <updated>2010-01-07T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/1/bag-o-links-7-1-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://m.onkey.org/2010/1/7/introducing-cramp&quot;&gt;Cramp &amp;#8211; asynchronous event driven ruby framework&lt;/a&gt; &amp;#8211; the latest from the magnificent &lt;a href=&quot;http://twitter.com/lifo&quot;&gt;@lifo&lt;/a&gt;, an event based ruby framework designed with withhold large number of connections and requests. Lifo suggests it&amp;#8217;s might be a good solution for streaming APIs which is exactly what i need, thanks!&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jqueryvsmootools.com/&quot;&gt;jQuery vs Mootools&lt;/a&gt; &amp;#8211; yeah, i know this link is old but i felt like i had to put it here since it is the article that is responsible for me moving away from jQuery to Mootools.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.boxuk.com/blog/web-app-business-model-user-needs&quot;&gt;Base your business model on what people actually need&lt;/a&gt; &amp;#8211; i see all kinds of people working on &amp;#8220;startups&amp;#8221; while they don&amp;#8217;t really know how to make money out of it, some don&amp;#8217;t even know if they can even sell something. This article demonstrates the need to base your business model on what people are already paying for and manipulate that need to make them pay you. win.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.amyeditor.com/&quot;&gt;amy editor &amp;#8211; online textmate?&lt;/a&gt; &amp;#8211; a nice web based Textmate duplicate, still finding it hard to see how i can use it, but the editor itself is awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jspedia.com/useful-guidelines-of-css-code-structure-for-html-5.html&quot;&gt;Useful guidelines for &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; structure under HTML5&lt;/a&gt; &amp;#8211; Eventually i&amp;#8217;ll have to acknowledge the existence of HTML5, incomplete as it is.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rcrowley.org/2010/01/06/things-unix-can-do-atomically&quot;&gt;Things that &lt;span class=&quot;caps&quot;&gt;UNIX&lt;/span&gt; can do automatically&lt;/a&gt; &amp;#8211; stuff i didn&amp;#8217;t know there. cool.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.nickhammond.com/2010/01/06/cloud-based-backup-choices&quot;&gt;Cloud based backup services&lt;/a&gt; &amp;#8211; an overview over some cloud backup services, personally i use Dropbox and Jungle disk for different purposes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.techbabu.com/2010/01/10-safari-plugins-to-make-your-life-easier/&quot;&gt;10 Safari plugins you must be using&lt;/a&gt; &amp;#8211; since i skipped my ticket for the Chrome train (hate it, yes) some of those plugins in the post do make my life easier.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.reductivelabs.com/trac/puppet/wiki/PuppetRecipes&quot;&gt;Puppet recipes&lt;/a&gt; &amp;#8211; a vast collection of puppet (server setup automation) recipes. neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://railsfreak.com/post/320115371/mocking-and-stubbing-can-be-evil&quot;&gt;mocking and stubbing can be evil&lt;/a&gt; &amp;#8211; yeah, i kind of agree but then again, every misused feature can be evil.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.jsfiddle.net/&quot;&gt;jsFiddle &amp;#8211; javascript playground&lt;/a&gt; &amp;#8211; cute simple app that allows you play around with javascript libraries and have fun, &lt;a href=&quot;http://rendera.heroku.com&quot;&gt;rendera&lt;/a&gt; is still my favorite client side playground.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.vineetgupta.com/2010/01/nosql-databases-part-1-landscape.html&quot;&gt;noSQL Databases &amp;#8211; part 1&lt;/a&gt; &amp;#8211; one of the best noSQL overviews i read lately, gives a pretty good idea on what&amp;#8217;s out there in this section.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://adminnoob.com/&quot;&gt;adminoob &amp;#8211; system administration for noobs&lt;/a&gt; &amp;#8211; a nice blog with helpful system administration posts.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://cloudsplit.com/&quot;&gt;Cloudsplit &amp;#8211; cost control your cloud storage&lt;/a&gt; &amp;#8211; one of the things that annoy me about Amazon, is that there is no reasonable way to calculate your real costs. The so-called calculator they have is only usable for rocket scientists so i am often left in mid air when i try to asset my costs. well, cloudsplit solves that. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://coaxialhost.com/tutorials/writing_ruby_extensions.html&quot;&gt;Writing ruby extenstions, in C that is&lt;/a&gt; &amp;#8211; looks like fun, the day after i take over the world i&amp;#8217;ll try to pull something off.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.teachmetocode.com/screencasts/essential-css-for-every-web-developer&quot;&gt;Essential &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; for every web developer&lt;/a&gt; &amp;#8211; another good screencast from teachmetocode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/bhuga/quantity&quot;&gt;quantity&lt;/a&gt; &amp;#8211; quantities and measurements for Ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/carr/phone&quot;&gt;phone&lt;/a&gt; &amp;#8211; phone number parsing and validation for Ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/upstream/simple_facebook_connect/&quot;&gt;simple_facebook_connect&lt;/a&gt; &amp;#8211; adds Facebook connect&amp;#8217;s signin/signout options to your Rails application.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/actsasflinn/snippy/&quot;&gt;snippy&lt;/a&gt; &amp;#8211; pastie/gist clone on Rails.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jim/carmen/&quot;&gt;carmen&lt;/a&gt; &amp;#8211; A simple collection of geographic names and abbreviations for Rails apps (includes replacements for country_select and state_select)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/remi/phd&quot;&gt;phd&lt;/a&gt; &amp;#8211; Heroku still deployments for passenger.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/dinsley/tartarus/&quot;&gt;tartarus&lt;/a&gt; &amp;#8211; an exception notifier for rails.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 2/1/2010</title>
   <link href="http://blog.eizesus.com/2010/1/bag-o-links-2-1-2010"/>
   <updated>2010-01-02T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/1/bag-o-links-2-1-2010</id>
   <content type="html">&lt;p&gt;So yeah, i&amp;#8217;ve been away for December on a vacation i&amp;#8217;ve been waiting for in the last 3 years, bag of links was not on top of my schedule obviously, but i&amp;#8217;m going back on track. here we go:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railsillustrated.com/blazing-fast-sinatra-with-memcached.html&quot;&gt;blazing speeds with sinatra and memcached&lt;/a&gt; &amp;#8211; a good combination for speed and profit.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railsonwave.com/2009/4/22/selenium-and-cruisecontrol-rb/&quot;&gt;selenium and CruiseControl.rb&lt;/a&gt; &amp;#8211; tests and behavior work well.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://james.padolsey.com/javascript/anti-patterns-in-the-making/&quot;&gt;Anti-patterns in the making&lt;/a&gt; &amp;#8211; javascript declarations in training.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/66610/how-can-i-create-a-site-in-php-and-have-it-generate-a-static-version&quot;&gt;Backup your static html site with wget&lt;/a&gt; &amp;#8211; first answer ftw.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.evotech.net/blog/2009/12/web-development-for-the-iphone-html-css-support/&quot;&gt;iPhone&amp;#8217;s &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; support&lt;/a&gt; &amp;#8211; iPhone support for &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; selectors and funage.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.igvita.com/2009/12/07/future-of-rdbms-is-ram-clouds-ssd&quot;&gt;Future of &lt;span class=&quot;caps&quot;&gt;RDBMS&lt;/span&gt;&lt;/a&gt; &amp;#8211; Igvita on the future of DBs and how &lt;span class=&quot;caps&quot;&gt;SSD&lt;/span&gt; and &lt;span class=&quot;caps&quot;&gt;RAM&lt;/span&gt; falls into place.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://idleprocess.wordpress.com/2009/11/24/presentation-summary-high-performance-at-massive-scale-lessons-learned-at-facebook/&quot;&gt;High performance &amp;#8211; Facebook&amp;#8217;s way&lt;/a&gt; &amp;#8211; how facebook tackled the scaling monster (Hive is awesome fwiw).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/12/10/benchmarked-templates/&quot;&gt;Javascript template libraries benchmarking&lt;/a&gt; &amp;#8211; a benchmark comparison between common template engines in JS.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railstutorial.org/book&quot;&gt;Learn rails by example&lt;/a&gt; &amp;#8211; free online rubyonrails book, pretty good. not perfect.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/12/15/javascript-charts-roundup&quot;&gt;Javascript chart roundup&lt;/a&gt; &amp;#8211; weee, more charts!&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://yehudakatz.com/2009/12/20/generic-actions-in-rails-3&quot;&gt;Generic actions in Rails 3&lt;/a&gt; &amp;#8211; There will be A &lt;span class=&quot;caps&quot;&gt;LOT&lt;/span&gt; to learn about Rails 3 when it hits the shelf, maybe too much.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.adamlowe.me/2009/12/vim-destroys-all-other-rails-editors.html&quot;&gt;&lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; destroys all other rails editors&lt;/a&gt; &amp;#8211; it urges me to drop textmate, well, at least try it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.tuaw.com/2009/12/30/iphone-devsugar-improved-network-reachability-routines/&quot;&gt;Improved network reachability routines in iPhone development&lt;/a&gt; &amp;#8211; good tips on how to manage your network connectivity on your iPhone application.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://reductivelabs.com/trac/puppet/wiki/Recipes/Amazon-EC2-Recipe&quot;&gt;EC2 recipe for puppet&lt;/a&gt; &amp;#8211; win.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.e-booksdirectory.com/programming.php&quot;&gt;Free programming e-books&lt;/a&gt; &amp;#8211; and lots of them.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://stevehanov.ca/blog/index.php?id=93&quot;&gt;vector drawing in javascript&lt;/a&gt; &amp;#8211; hell yeah! HTML5 is fun, too bad IE is here.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rendera.heroku.com/&quot;&gt;Learn HTML5 and &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; with rendera&lt;/a&gt; &amp;#8211; a cute sinatra application by &lt;a href=&quot;http://twitter.com/bphogan&quot;&gt;Brian Hogan&lt;/a&gt; that will help you get ready for the future, IE users, begone.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ideone.com/&quot;&gt;The code paster from heaven&lt;/a&gt; &amp;#8211; don&amp;#8217;t know how many languages it has, but i think it&amp;#8217;s the one that has the most, at least from the ones i know.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ajaxian.com/archives/pastrykit-an-iphone-webdev-library-from-apple&quot;&gt;PastryKit &amp;#8211; UI library for iphone&lt;/a&gt; &amp;#8211; from Apple! yay.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://railsnotes.com/rails-3/&quot;&gt;Rails 3 information center&lt;/a&gt; &amp;#8211; blog posts, tutorials, overviews&amp;#8230; i am still not sure it like it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://grid-based.com/&quot;&gt;grid based designs&lt;/a&gt; &amp;#8211; a collection of grid based designs.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.amplesdk.com/&quot;&gt;AmpleSDK &amp;#8211; open source &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; framework&lt;/a&gt; &amp;#8211; Ample &lt;span class=&quot;caps&quot;&gt;SDK&lt;/span&gt; is a standard-based cross-browser JavaScript &lt;span class=&quot;caps&quot;&gt;GUI&lt;/span&gt; Framework for building Rich Internet Applications.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ukijs.org/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;UKI&lt;/span&gt; &amp;#8211; Simple UI library&lt;/a&gt; &amp;#8211; Uki is a fast and simple JavaScript user interface toolkit for desktop-like web applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/technoweenie/alice&quot;&gt;alice&lt;/a&gt; &amp;#8211; rack based &lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt; client.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/blythedunham/health_monitor&quot;&gt;health_monitor&lt;/a&gt; &amp;#8211; Monitor individual aspects of your rails application’s health&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/chaoslawful/drizzle-nginx-module&quot;&gt;Drizzle nginx module&lt;/a&gt; &amp;#8211; upstream module for nginx, run sql queries directly from nginx!&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 30/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-30-11-2009"/>
   <updated>2009-11-30T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-30-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://authsmtp.com/&quot;&gt;AuthSMTP&lt;/a&gt; &amp;#8211; a nice web service that offers some &lt;span class=&quot;caps&quot;&gt;SMTP&lt;/span&gt; services for your application.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://unite.opera.com/&quot;&gt;Opera Unite&lt;/a&gt; &amp;#8211; power to the browser!&amp;#8230; question is&amp;#8230; why? :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tammersaleh.com/posts/automatically-generate-heroku-gems-file&quot;&gt;Automatically generate your .gems file for Heroku&lt;/a&gt; &amp;#8211; yes, again, heroku is awesome. This tiny rake task will analyze the gems your application uses and will create the &lt;code&gt;.gems&lt;/code&gt; file for an Heroku instance.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://railspikes.com/2008/8/11/understanding-map-and-reduce&quot;&gt;Understanding MapReduce&lt;/a&gt; &amp;#8211; ruby examples, why, and where to use it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rubyconf2009.confreaks.com/&quot;&gt;RubyConf2009 videos&lt;/a&gt; &amp;#8211; yay.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://wynnnetherland.com/2009/11/link-linkedin-into-your-next-ruby-application/&quot;&gt;a Linkedin &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; gem&lt;/a&gt; &amp;#8211; OAuth based, awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.samstokes.co.uk/post/251167556/regex-style-in-ruby&quot;&gt;Regexp style in Ruby&lt;/a&gt; &amp;#8211; fun with Regexps.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.vanseodesign.com/css/css-positioning/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; positioning explain&lt;/a&gt; &amp;#8211; yeah, i thought i knew how to do it too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://horicky.blogspot.com/2009/11/nosql-patterns.html&quot;&gt;&lt;span class=&quot;caps&quot;&gt;NOSQL&lt;/span&gt; Patterns&lt;/a&gt; &amp;#8211; another post covering the actual &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; implementation and patterns of the &lt;span class=&quot;caps&quot;&gt;NOSQL&lt;/span&gt; squad members.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/freelancing-god/ginger&quot;&gt;ginger&lt;/a&gt; &amp;#8211; Run specs/tests multiple times through different gem versions.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/imathis/fancy-buttons&quot;&gt;fancybuttons&lt;/a&gt; &amp;#8211; fancy buttons are fancy.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 25/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-25-11-2009"/>
   <updated>2009-11-25T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-25-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://starter.pixelgraphics.us/&quot;&gt;a jQuery &amp;#8216;jumpstart&amp;#8217; application&lt;/a&gt; &amp;#8211; test your jquery plugins on this web app, cool idea.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://groups.google.com/group/mongodb-user/browse_thread/thread/cbc42dffd1f1e866&quot;&gt;exposing MongoDB &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt; interface&lt;/a&gt; &amp;#8211; a good discussion on the google group.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://robots.thoughtbot.com/post/254496652/aint-no-calla-back-girl&quot;&gt;FactoryGirl gets callbacks&lt;/a&gt; &amp;#8211; thanks to &lt;a href=&quot;http://twitter.com/fowlduck&quot;&gt;@fowlduck&lt;/a&gt; the magnificent.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/242751&quot;&gt;A detailed list of Rails based &lt;span class=&quot;caps&quot;&gt;CMS&lt;/span&gt; applications&lt;/a&gt; &amp;#8211; thanks to the glorious &lt;a href=&quot;http://afreshcup.com&quot;&gt;Mike Gunderloy&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ozmm.org/posts/static_sites_with_mustache.html&quot;&gt;Static sites with mustache&lt;/a&gt; &amp;#8211; a brief tutorial.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://psionides.jogger.pl/2009/11/23/check-your-scripts-with-jslint-on-rails/&quot;&gt;Checking your Javascripts with JSLint on Rails&lt;/a&gt; &amp;#8211; howto + plugin.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.themomorohoax.com/2009/11/22/setting-up-amazon-rds-for-heroku-rails&quot;&gt;Setting up Amazon&amp;#8217;s &lt;span class=&quot;caps&quot;&gt;RDS&lt;/span&gt; on Heroku&lt;/a&gt; &amp;#8211; just to make a point, i love heroku.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.teachmetocode.com/screencasts/21&quot;&gt;Introduction to MongoDB&lt;/a&gt; &amp;#8211; if you haven&amp;#8217;t jumped that train yet.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.leemunroe.com/freelance-document-templates/&quot;&gt;Document templates for Freelancers&lt;/a&gt; &amp;#8211; a list of documents (contracts, proposals) that you might need.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/other/top-20-mysql-best-practices/&quot;&gt;20 MySQL best practices&lt;/a&gt; &amp;#8211; useful.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/blog/551-optimizing-asset-bundling-and-serving-with-rails&quot;&gt;Optimizing asset bundling and serving with Rails&lt;/a&gt; &amp;#8211; from Github, which it may not be nice to say.. but i&amp;#8217;m not sure they are the ones that should be telling others how to scale and stabilize an app. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.webdesignerwall.com/tutorials/coding-clean-and-semantic-templates/&quot;&gt;Coding semantic templates&lt;/a&gt; &amp;#8211; make your HTML_fu more powerful.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gracelessfailures.com/&quot;&gt;Scala blog for fun&lt;/a&gt; &amp;#8211; Twitter uses it, so it&amp;#8217;s not for &amp;#8220;fun and profit&amp;#8221;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=mVXpvsdeuKU&quot;&gt;MapReduce lecture&lt;/a&gt; &amp;#8211; Other good stuff on that YouTube channel.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.cloudera.com/blog/2009/11/17/hadoop-at-twitter-part-1-splittable-lzo-compression/&quot;&gt;Hadoop on Twitter&lt;/a&gt; &amp;#8211; fun at Twitter.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://css-tricks.com/app-from-scratch-1-design/&quot;&gt;Creating a web application from scratch&lt;/a&gt; &amp;#8211; design-wise.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.metaskills.net/2009/11/23/authenticated-s3-gets-for-private-objects-using-paperclip&quot;&gt;Authenticated S3 GETs for private objects with Paperclip&lt;/a&gt; &amp;#8211; just when i needed it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://aext.net/2009/11/bubble-effect-with-css/&quot;&gt;Bubble effect in &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;&lt;/a&gt; &amp;#8211; like the MacOS dock. awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pivotallabs.com/users/jpignata/blog/articles/1077-converting-rails-application-data-from-mysql-to-postgresql&quot;&gt;Converting Rails applications from MySQL to PostgreSQL&lt;/a&gt; &amp;#8211; some Pivotal awesomeness.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.pauldix.net/2009/11/resources-for-synchronous-reads-asynchronous-writes-at-rubyconf-2009.html&quot;&gt;Async Reads and Async Writes resources list&lt;/a&gt; &amp;#8211; Great list of tools and tutorials from Dix&amp;#8217;s Rubyconf presentation.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://loo.no/articles/easy-zip-generating-with-rails-nginx-paperclip&quot;&gt;Generating zip files with Rails, paperclip and Nginx&lt;/a&gt; &amp;#8211; i really need to checkout nginx.. well, if Heroku will fail me.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/dcparker/days_and_times&quot;&gt;days_and_times&lt;/a&gt; &amp;#8211; Natural language method chaining for Time, Durations and the like.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/janl/awesome&quot;&gt;awesome&lt;/a&gt; &amp;#8211; a Redis implementation in node.js&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/hassox/pancake&quot;&gt;pancake&lt;/a&gt; &amp;#8211; a Rack rack.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dcparker.github.com/ruby-gmail/&quot;&gt;ruby-gmail&lt;/a&gt; &amp;#8211; Gmail interaction made fun.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 19/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-19-11-2009"/>
   <updated>2009-11-19T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-19-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/ie/archive/2009/11/18/an-early-look-at-ie9-for-developers.aspx&quot;&gt;IE9 early look for developers&lt;/a&gt; &amp;#8211; OH&amp;#8230; &lt;span class=&quot;caps&quot;&gt;SHINY&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;ROUND&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;CORNERES&lt;/span&gt;&amp;#8230;.who cares?! the comment that states &lt;blackquote&gt;&amp;#8220;why don&amp;#8217;t they just copy the webkit engine? it&amp;#8217;s open source&amp;#8221;&lt;/blackquote&gt; says it all.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.neeraj.name/blog/articles/888-hash-method-in-ruby&quot;&gt;#hash method in Ruby&lt;/a&gt; &amp;#8211; Neeraj points out a nice method that gives you a way to get an object footprint.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ejohn.org/blog/deep-tracing-of-internet-explorer/&quot;&gt;Full tracing of Internet Explorer&lt;/a&gt; &amp;#8211; Resig is digging into Internet Explorer, sounds like a fun tour.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://agiletesting.blogspot.com/2009/04/experiences-deploying-large-scale.html&quot;&gt;Experiences deploying a large-scale infrastructure in Amazon EC2&lt;/a&gt; &amp;#8211; good tips on how to pre-plan your application deployment and horizontal scaling agenda.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tonkapark.com/337/deploying-spree-using-heroku/&quot;&gt;Deploying spree on Heroku&lt;/a&gt; &amp;#8211; an easy tutorial on how to easily move your e-commerce site to Heroku from whatever diabolic shared hosting you currently rely on. (note: i&amp;#8217;m totally in-love with heroku).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.webdesignerwall.com/tutorials/coding-clean-and-semantic-templates/&quot;&gt;Semantic &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; templates&lt;/a&gt; &amp;#8211; avoid &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;iditis, enjoy the fresh air of semantic structure.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pushmodule.slact.net/&quot;&gt;Nginx gets a push module&lt;/a&gt; &amp;#8211; yeah&amp;#8230;ok. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://andyjeffries.co.uk/articles/25-tips-for-intermediate-git-users&quot;&gt;25 tips for Git users&lt;/a&gt; &amp;#8211; title says &amp;#8220;intermediate&amp;#8221;, i think everyone should read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/11/19/express/&quot;&gt;Express &amp;#8211; Sinatra style javascript&lt;/a&gt; &amp;#8211; that is nice! a sinatra like V8 based &amp;#8220;server-side&amp;#8221; javascript library.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/11/18/jack-and-narwhal/&quot;&gt;Narwal&lt;/a&gt; &amp;#8211; another server-side javascript solution.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://barkingiguana.com/2009/11/10/the-stack-trace-is-precious&quot;&gt;your stack trace is precious!&lt;/a&gt; &amp;#8211; tips from the awesome barking iguana.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.engineyard.com/blog/2009/key-value-stores-in-ruby-the-wrap-up/&quot;&gt;Key-Value store in Ruby: wrap up&lt;/a&gt; &amp;#8211; EY&amp;#8217;s series on Ruby KV storage is over, excellent read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2009/11/17/10-ebay-secrets-for-planet-wide-scaling.html&quot;&gt;10 quick tips from EBay on scaling&lt;/a&gt; &amp;#8211; the &lt;a href=&quot;http://www.hpts.ws/session9/shoup.pdf&quot;&gt;presentation&lt;/a&gt; is here.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.tuxradar.com/content/7-cool-linux-projects&quot;&gt;cool linux projects to do&lt;/a&gt; &amp;#8211; nice ideas, if you have some spare time.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.tuxradar.com/content/command-line-tricks-smart-geeks&quot;&gt;command line ninja tricks for geeks&lt;/a&gt; &amp;#8211; cool stuff.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.jungledisk.com/&quot;&gt;jungle disk&lt;/a&gt; &amp;#8211; cheap and simple backup solution, i love it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jnicklas/capybara&quot;&gt;capybara&lt;/a&gt; &amp;#8211; webrat alternative which aims to support all browser simulators&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/grosser/easy_esi&quot;&gt;easy_esi&lt;/a&gt; &amp;#8211; Rails: Cached pages with dynamic partials == Easy &lt;span class=&quot;caps&quot;&gt;ESI&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/giraffesoft/timeline_fu&quot;&gt;timeline_fu&lt;/a&gt; &amp;#8211; a rails plugin that manages an activity stream, fits social networks and such.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/Adman65/godlike&quot;&gt;godlike&lt;/a&gt; &amp;#8211; enjoy the calming voice of the UT announcer when your autotest cycle passes with no failures/errors.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mykeus/sinatra-mvc&quot;&gt;sinatra-mvc&lt;/a&gt; &amp;#8211; a nice attempt to show some &lt;span class=&quot;caps&quot;&gt;MVC&lt;/span&gt; conventions into sinatra.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/samdanavia/cucumber_textmate&quot;&gt;cucumber_textmate&lt;/a&gt; &amp;#8211; Custom formatter for cucumber, creates pretty html output and JS for textmate similar to the rspec html output.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/pius/term_extraction&quot;&gt;term_extraction&lt;/a&gt; &amp;#8211; extract related terms and tags for a word or a phrase.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/nextstep/dead_simple_reports&quot;&gt;dead_simple_report&lt;/a&gt; &amp;#8211; create reports via sql or ruby code for your rails app in minutes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/bartzon/dj_stats&quot;&gt;DJ stats&lt;/a&gt; &amp;#8211; reporting module for delayed_job.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/Adman65/AccessControl&quot;&gt;AccessControl&lt;/a&gt; &amp;#8211; pin-pointed permission management for Rails. looks nice.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 17/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-17-11-2009"/>
   <updated>2009-11-17T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-17-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://joshsharpe.com/archives/56&quot;&gt;Accessing a nested association in Rails&lt;/a&gt; &amp;#8211; This is actually an issue that is coming up way to often on #rubyonrails: how to access a nested association in rails with a simple accessor method.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://matt-darby.com/posts/763-capistrano-task-to-auto-upload-assets-to-s3&quot;&gt;Upload your Rails assets to S3&lt;/a&gt; &amp;#8211; A tutorial that shows a simple coupling between a capsitrano task and a rake task to manage uploads for S3.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://wari.konem.net/&quot;&gt;Web application resource inspector&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;WARI&lt;/span&gt; scans your web application and examines dependencies between JavaScript functions, &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; styles, &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; tags and images. haven&amp;#8217;t tried it yet but sounds neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/napcs/testing-your-sites-in-english-with-cucumber&quot; title=&quot;slide&quot;&gt;Testing your site in english with cucumber&lt;/a&gt; &amp;#8211; my favorite Cucumber slide.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/11/16/atlas/&quot;&gt;Trying out Atlas280&lt;/a&gt; &amp;#8211; looks nice, but 20$ to test it?&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://wynnnetherland.com/2009/11/what-makes-a-good-api-wrapper/&quot;&gt;Making a good &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; wrapper in Ruby&lt;/a&gt; &amp;#8211; a few useful tips if you are planning on writing a Ruby wrapper.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://documentcloud.github.com/jammit/&quot;&gt;jammit&lt;/a&gt; &amp;#8211; an industrial strength asset packaging library for Rails&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vinsol.com/blog/2009/11/16/11-things-to-consider-before-deploying-your-rails-application/&quot;&gt;11 Things to Consider Before Deploying Your Rails Application&lt;/a&gt; &amp;#8211; good list of tips some of us tend to forget.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/stffn/declarative_authorization/&quot;&gt;User roles in Rails applications&lt;/a&gt; &amp;#8211; An authorization Rails plugin using a declarative &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; for specifying authorization rules in one place.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/orionz/minion/&quot;&gt;Super simple job queuing with &lt;span class=&quot;caps&quot;&gt;AMQP&lt;/span&gt;&lt;/a&gt; &amp;#8211; Minion makes processing jobs over &lt;span class=&quot;caps&quot;&gt;AMQP&lt;/span&gt; simple and easy, looks like they are right.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tynerblain.com/blog/2009/11/16/website-product-manager&quot;&gt;Write website requirements without a product manager&lt;/a&gt; &amp;#8211; some good reading if you are considering this kind of madness. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://matt-darby.com/posts/729-cache-money-rules-everything-around-me&quot;&gt;Cache-money trick&lt;/a&gt; &amp;#8211; a quick tip to skip cachemoney when running on development environment.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://agiletesting.blogspot.com/2009/11/monitoring-multiple-mysql-instances.html&quot;&gt;Monitoring mySQL instances with munin&lt;/a&gt; &amp;#8211; a quick tutorial.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://webworkerdaily.com/2009/11/17/your-office-in-the-clouds-the-best-online-virtual-desktops/&quot;&gt;Online desktops&lt;/a&gt; &amp;#8211; a cool post with a brief overview of several online desktop services.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blogs.techrepublic.com.com/10things/?p=1166&quot;&gt;10 common backup mistakes&lt;/a&gt; &amp;#8211; keep away from those.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.webyog.com/blog/2009/11/16/top-10-things-to-know-about-amazon-rds/&quot;&gt;10 things to know about Amazon &lt;span class=&quot;caps&quot;&gt;RDS&lt;/span&gt;&lt;/a&gt; &amp;#8211; i will be forced to try that soon.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vinaytechs.blogspot.com/2009/11/css-best-practices-and-cross-browser.html&quot;&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; readability tips&lt;/a&gt; &amp;#8211; making a happy stylesheet.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://techblog.floorplanner.com/2009/11/17/case-insensitive-validates_uniqueness_of-slowness/&quot;&gt;validates_uniqueness_of slowness&lt;/a&gt; &amp;#8211; another addition to that troublesome validator.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rackerhacker.com/2009/11/16/automatically-loading-iptables-on-debianubuntu/&quot;&gt;autoload iptables on Ubuntu&lt;/a&gt; &amp;#8211; u just needed that.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.intovps.com/&quot;&gt;IntoVPS&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;VPS&lt;/span&gt; service provider, europe/&lt;span class=&quot;caps&quot;&gt;USA&lt;/span&gt; options&amp;#8230;worths checking out.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://sickill.net/blog/2009/11/15/rails-like-console-for-any-rack-based-ruby-web-app.html&quot;&gt;Console for Rack apps&lt;/a&gt; &amp;#8211; use it to load application environment for Rails, Merb, Sinatra, Camping, Ramaze or your own framework provided there is config.ru file in app&amp;#8217;s root directory.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.midorijs.com/&quot;&gt;midori &amp;#8211; a lightweight javascript library&lt;/a&gt; &amp;#8211; midori is an ultra-lightweight JavaScript framework that gets the job done without getting in your way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mojombo/grit&quot;&gt;grit&lt;/a&gt; &amp;#8211; Grit gives you object oriented read/write access to Git repositories via Ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://madhatted.com/2009/11/13/shardthelove-horizontal-scaling-for-activerecord&quot;&gt;ShardTheLove&lt;/a&gt; &amp;#8211; hardTheLove is a library we use in both Ruby frameworks for scaling our MySQL databases.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://codaset.com/fernyb/gmap-street-view&quot;&gt;gmap-street-view&lt;/a&gt; &amp;#8211; A Simple ruby gem for retrieving google street view.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://codaset.com/veeti/ruby-irc-statistics-generator&quot;&gt;Ruby &lt;span class=&quot;caps&quot;&gt;IRC&lt;/span&gt; statistics generator&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;IRC&lt;/span&gt; logfile parser written in Ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://codaset.com/hallison/postview&quot;&gt;PostView&lt;/a&gt; &amp;#8211; Postview is a simple blogware written in Ruby using the Sinatra &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; for render files written in Markdown.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/nkpart/dget&quot;&gt;dget&lt;/a&gt; &amp;#8211; create local copies of Github wiki pages.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/azbuka/&quot;&gt;azbuka&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; Typographical Base Rendering Library.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 14/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-14-11-2009"/>
   <updated>2009-11-14T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-14-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.rackspacecloud.com/blog/2009/11/09/nosql-ecosystem/&quot;&gt;noSQL Ecosystem&lt;/a&gt; &amp;#8211; an article that make a little order in the recent ou-ha! around noSQL and the libraries around.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://recurly.com/&quot;&gt;recurly&lt;/a&gt; &amp;#8211; recurring payments to your application.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2009/11/14/jquery-custom-events/&quot;&gt;Creating Javascript custom events&lt;/a&gt; &amp;#8211; this post form DailyJS explains how easy it is to bind and trigger custom events in jQuery.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/support/wiki/IssueTrackerAPI&quot;&gt;Google&amp;#8217;s issue tracker &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/a&gt; &amp;#8211; i wonder if the times in which we miss the Microsoft dominance over us are near. &lt;b&gt;shakes&lt;/b&gt;&lt;/li&gt;
	&lt;li&gt;&amp;#8220;Using ActionMailer for internal messaging&amp;#8221; &amp;#8211; simple tutorial that shows a very basic usage of AM.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.p51labs.com/simply-buttons-v2/&quot;&gt;Simply buttons v2&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;/javascript &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; awesomeness.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.infinitezest.com/articles/getting-started-with-android-on-a-mac.aspx&quot;&gt;Starting Android development on your Mac&lt;/a&gt; &amp;#8211; a brief tutorial for all of you infidels.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://sdruby.org/podcast/66?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+rubytube+%28RubyTu.be+-+Recently+Added%29&quot;&gt;Unit testing: the easy way&lt;/a&gt; &amp;#8211; the guys at the SD ruby group are sharing some insights.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://css-tricks.com/what-beautiful-html-code-looks-like/&quot;&gt;How beautiful &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; looks like&lt;/a&gt; &amp;#8211; Chris, you are awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.neeraj.name/blog/articles/886-show_response-to-help-debugging-functional-tests?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+ARandomPixel+%28www.neeraj.name%29&quot;&gt;show_response for a better functional tests debugging&lt;/a&gt; &amp;#8211; Neeraj with a sweet little tool to display the &lt;code&gt;response&lt;/code&gt; in functional tests.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.neeraj.name/blog/articles/885-use-end-more-often-in-jquery-while-building-dom-elements?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+ARandomPixel+%28www.neeraj.name%29&quot;&gt;Using jQuery&amp;#8217;s &lt;code&gt;end()&lt;/code&gt; when building &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; elements&lt;/a&gt; &amp;#8211; Another tip from Neeraj, who has a pretty neat blog.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.reddit.com/r/ruby/comments/a2ayp/why_do_i_need_to_sudo_to_install_gems/&quot;&gt;Why do i need to use &lt;code&gt;sudo&lt;/code&gt; when i install gems?&lt;/a&gt; &amp;#8211; a discussion on Reddit explains why you probably don&amp;#8217;t have to.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://agiletesting.blogspot.com/2009/11/great-series-of-posts-on-tokyo-tyrant.html&quot;&gt;Great series of posts on Tokyo Tyrant&lt;/a&gt; &amp;#8211; yes they are great, even more to come.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://buildinternet.com/2009/11/scaling-servers-with-the-cloud-amazon-cloudfront/&quot;&gt;Scaling servers with amazong: CloudFront&lt;/a&gt; and &lt;a href=&quot;http://buildinternet.com/2009/11/scaling-servers-with-the-cloud-amazon-s3/&quot;&gt;Amazon S3&lt;/a&gt; &amp;#8211; looks like a series of posts is coming to life on Amazon&amp;#8217;s services, i&amp;#8217;ll be sure to follow.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2009/7/25/latency-is-everywhere-and-it-costs-you-sales-how-to-crush-it.html&quot;&gt;Latency vs. Business&lt;/a&gt; &amp;#8211; increase scalability, spend less money.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/the-basics-of-object-oriented-javascript/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+nettuts+%28NETTUTS%29&quot;&gt;The basics of Javascript &lt;span class=&quot;caps&quot;&gt;OOP&lt;/span&gt;&lt;/a&gt; &amp;#8211; Just in time.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://litanyagainstfear.com/blog/2009/11/10/load-rails-conditionally-with-rack/&quot;&gt;Gemcutter&amp;#8217;s under-maintenance stack explained&lt;/a&gt; &amp;#8211; rack + sinatra. nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/adomokos/DesignPatterns-Ruby&quot;&gt;Ruby Design patterns code samples&lt;/a&gt;&amp;quot; &amp;#8211; from the book carrying the same title.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/flyerhzm/rails_best_practices&quot;&gt;rails_best_practices&lt;/a&gt; &amp;#8211; rails_best_practices is a gem to check quality of rails app files according to ihower’s presentation from Kungfu RailsConf in Shanghai China&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/edspencer/jaml/&quot;&gt;jaml&lt;/a&gt; &amp;#8211; javascript &lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/madrobby/emile&quot;&gt;emile&lt;/a&gt; &amp;#8211; emile.js is a no-thrills stand-alone &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; animation JavaScript framework, named after Émile Cohl, early animator.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mattmatt/shoulda-addons&quot;&gt;shoulda-addons&lt;/a&gt; &amp;#8211; Awesome add-ons to make Shoulda more awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/davekrupinski/fitter_happier&quot;&gt;fitter_happier&lt;/a&gt; &amp;#8211; A Rails Plugin for adding a simple health check to your application (note: i&amp;#8217;d use &lt;code&gt;metal&lt;/code&gt; for that).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/reddavis/Naive-Bayes&quot;&gt;Naive Bayes&lt;/a&gt; &amp;#8211; Simple Naive Bayes classifier&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/aniero/rack-streaming_proxy&quot;&gt;Rack Streaming proxy&lt;/a&gt; &amp;#8211; Streaming proxy for Rack, the rainbows to Rack::Proxy&amp;#8217;s unicorn&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>PlainView - Add database views to your Rails applications</title>
   <link href="http://blog.eizesus.com/2009/11/plain-view-add-view-to-your-rails-applications"/>
   <updated>2009-11-12T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/plain-view-add-view-to-your-rails-applications</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://github.com/eladmeidar/PlainViews&quot;&gt;PlainView&lt;/a&gt; is a plugin i wrote that adds a fun DSLed &lt;code&gt;create_view&lt;/code&gt; (and &lt;code&gt;drop_view&lt;/code&gt; of course). to your Rails migrations toolkit and harness the power of &lt;a href=&quot;http://en.wikipedia.org/wiki/View_(database)&quot;&gt;database views&lt;/a&gt; in your application with fun and joy.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;as for now this is only available as a plugin, install as follows:&lt;br /&gt;
&lt;pre&gt;script/plugin install git://github.com/eladmeidar/PlainViews.git&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;First you&amp;#8217;ll have to generate a migration&lt;br /&gt;
&lt;pre&gt;script/generate migration create_users_and_views&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Than, on &lt;code&gt;self.up&lt;/code&gt; you can use the &lt;code&gt;create_view&lt;/code&gt; helper:&lt;br /&gt;
&lt;pre&gt;class TestView &amp;lt; ActiveRecord::Migration&lt;br /&gt;
  def self.up&lt;br /&gt;
    create_view :v_people do |t|&lt;br /&gt;
      t.base_model :user&lt;br /&gt;
      t.select :select =&amp;gt; &amp;#8216;id, name&amp;#8217;, :conditions =&amp;gt; {:name =&amp;gt; &amp;#8217;elad&amp;#8217;}&lt;br /&gt;
      t.use_security_mode :definer&lt;br /&gt;
      t.use_algorithm :merge&lt;br /&gt;
      t.use_check_option :cascaded&lt;br /&gt;
    end&lt;br /&gt;
  end&lt;/p&gt;
def self.down
drop_view :v_people
end
&lt;p&gt;end&lt;/pre&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;select&lt;/strong&gt; &amp;#8211; required, select is the actual select statement, you can either use ActiveRecord#find conventions or specify a plain test query.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;base_mode&lt;/strong&gt; this is used only if you use the ActiveRecord conventions on the &lt;strong&gt;select&lt;/strong&gt; statement, otherwise it is not required&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;use_security&lt;/strong&gt; &amp;#8211; i don&amp;#8217;t know if this is supported on all databases, but in MySQL you can choose either &lt;code&gt;:merge&lt;/code&gt; or &lt;code&gt;:temptable&lt;/code&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;use_algorithm&lt;/strong&gt; &amp;#8211; again, don&amp;#8217;t know if this is a cross &lt;span class=&quot;caps&quot;&gt;DBMS&lt;/span&gt; option but on MySQL you can choose between &lt;code&gt;:definer&lt;/code&gt; or &lt;code&gt;:invoker&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;check_option&lt;/strong&gt;  &amp;#8211; same deal, on MySQL you can choose between &lt;code&gt;:cascaded&lt;/code&gt; and &lt;code&gt;:local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Database support&lt;/h3&gt;
&lt;p&gt;I investigated a bit, and the basic usage (&lt;code&gt;select&lt;/code&gt; / &lt;code&gt;base_model&lt;/code&gt;) should run successfully on:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;MySQL&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;OCI&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;Oracle&lt;/li&gt;
	&lt;li&gt;Postgresql&lt;/li&gt;
	&lt;li&gt;SQLite&lt;/li&gt;
	&lt;li&gt;SQLServer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;although i was unable to actually test it on all of them, help is appreciated here :)&lt;/p&gt;
&lt;h3&gt;Tests&lt;/h3&gt;
&lt;p&gt;Not yet actually, there will be some soon.&lt;/p&gt;
&lt;h3&gt;Todos&lt;/h3&gt;
&lt;p&gt;Tests!&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Ninja testing your Rails plugins</title>
   <link href="http://blog.eizesus.com/2009/11/ninja-testing-your-rails-plugins"/>
   <updated>2009-11-11T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/ninja-testing-your-rails-plugins</id>
   <content type="html">&lt;p&gt;Testing plugins is much like testing your rails application, it uses the same rake and directory structure conventions which makes it a lot easier for who ever is already testing his Rails applications (you don&amp;#8217;t? go away!).&lt;/p&gt;
&lt;p&gt;Getting started will require you&amp;#8217;ll have basic/advanced knowledge of the Rails conventions, testing methods and tools:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;Test::Unit&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Rail&amp;#8217;s database schema management&lt;/li&gt;
	&lt;li&gt;rake&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;ll try to cover as much as possible but i assume that if you have any issues with one of the following, you should probably go ahead and read up the &lt;a href=&quot;http://guides.rubyonrails.org/testing.html&quot;&gt;Rails testing guide&lt;/a&gt; and maybe some of the other guides around while you are at it.&lt;/p&gt;
&lt;h2&gt;Testing standalone plugins&lt;/h2&gt;
&lt;p&gt;Testing plugins as part of a Rails application is pretty straight forward, you simply call:&lt;br /&gt;
&lt;pre&gt;rake test:plugins&lt;/pre&gt; or ,if you wish to run a specific plugin:&lt;br /&gt;
&lt;pre&gt;rake test:plugins &lt;span class=&quot;caps&quot;&gt;PLUGIN&lt;/span&gt;=name&lt;/pre&gt;&lt;br /&gt;
Yeah, that easy.&lt;/p&gt;
&lt;p&gt;That worked out for actually for a while, but i came to the conclusion that i shouldn&amp;#8217;t force people to embed my plugin into their applications even before they were able to test it and see that it&amp;#8217;s actually working.&lt;br /&gt;
Another reason is that forcing people to include the plugin in an application, is making the process of contributing to it (assuming it&amp;#8217;s open sourced, and it should be :) ) a bit more annoying.&lt;br /&gt;
Encapsulating the entire plugin test suit into the actual plugin tree and removing all non-required dependencies, gives your plugin a more generic and independent form.&lt;/p&gt;
&lt;h2&gt;General directory layout&lt;/h2&gt;
&lt;p&gt;Like i noted before, the Rails plugin&amp;#8217;s test directory is very similar to Rails&amp;#8217;s own test directory structure:&lt;br /&gt;
&lt;pre&gt;test/&lt;br /&gt;
	fixtures/&lt;br /&gt;
	lib/&lt;br /&gt;
	functionals/&lt;br /&gt;
	db/&lt;br /&gt;
	unit/&lt;br /&gt;
	Rakefile&lt;br /&gt;
	test_helper.rb&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;You don&amp;#8217;t actually have to have all of those in your plugin test directory, depends on what you are actually testing, you might want to remove folders that are not related to your plugin&amp;#8217;s functionality, for example ActiveRecord plugins will not need the &lt;code&gt;functionals/&lt;/code&gt; directory on most cases, but will probably need some application structure stubs (i&amp;#8217;ll get to that in the next section).&lt;/p&gt;
&lt;h2&gt;Testing ActiveRecord plugins&lt;/h2&gt;
&lt;p&gt;If your plugin has some functionality that extends ActiveRecord, or that relays on some ActiveRecord related built in functionality (associations for example) you&amp;#8217;ll need to require the &lt;code&gt;activerecord&lt;/code&gt; gem in your &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;pre&gt;require &amp;#8216;active_record&amp;#8217;&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;Creating a standalone database&lt;/h3&gt;
&lt;p&gt;Next, you&amp;#8217;ll need a database. since you are not running as part of a Rails application test suit, you can&amp;#8217;t use the default test database that ships with the Rails default test environment, you&amp;#8217;ll have to create one.&lt;br /&gt;
Since the goal we are after here, is to create somewhat a standalone plugin testing suit, the best way to get a standalone database is to create an &lt;strong&gt;in-memory sqlite3 database&lt;/strong&gt;, which is also easy to configure:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/232508.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3&gt;Loading the schema&lt;/h3&gt;
&lt;p&gt;The plugin&amp;#8217;s schema file is the file that hold all the database tables &lt;span class=&quot;caps&quot;&gt;DDL&lt;/span&gt; that you will need in order to test your plugin. The syntax is just like the one Rails uses in its own &lt;code&gt;db/schema.rb&lt;/code&gt;. To keep the conventions gods happy, i suggest creating a &lt;code&gt;db/&lt;/code&gt; directory in your plugin root and create &lt;code&gt;schema.rb&lt;/code&gt; there, here&amp;#8217;s an example just in case:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/232511.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;After the schema is ready, we&amp;#8217;ll need to load it by adding this line to &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;pre&gt;load &amp;#8216;test/db/schema.rb&amp;#8217;&lt;/pre&gt; (we include test/ in the path because we will be running &lt;code&gt;rake&lt;/code&gt; from the plugin&amp;#8217;s root directory).&lt;/p&gt;
&lt;h3&gt;Fixtures&lt;/h3&gt;
&lt;p&gt;Since we want a standalone testing suit, we will have to settle for fixtures as our database population tool and not on an external gem. create your &lt;code&gt;*.yml&lt;/code&gt; fixtures under the &lt;code&gt;fixtures/&lt;/code&gt; directory, then just require &lt;code&gt;'active_record/fixtures'&lt;/code&gt; in your &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/232517.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3&gt;Models&lt;/h3&gt;
&lt;p&gt;Since we require the &lt;code&gt;activerecord&lt;/code&gt; gem, you can create ActiveRecord models. Personally i create a directory named &lt;code&gt;app/&lt;/code&gt; under the plugin&amp;#8217;s root directory and mock a real application directory. (e.g creating &lt;code&gt;models/&lt;/code&gt;, &lt;code&gt;views/&lt;/code&gt;, &lt;code&gt;controllers/&lt;/code&gt; and whatever).&lt;/p&gt;
&lt;p&gt;After you are done creating your model you&amp;#8217;ll need to load them in your &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;pre&gt;Dir[&amp;#8216;test/db/app/models/&lt;code&gt;**&lt;/code&gt;/*.rb&amp;#8217;].each { |f| require f }&lt;/pre&gt; should do it.&lt;/p&gt;
&lt;p&gt;note that you can use the same to require controller files, just change the path to include the &lt;code&gt;controllers/&lt;/code&gt; subdirectory as well.&lt;/p&gt;
&lt;h2&gt;Testing ActionPack plugins&lt;/h2&gt;
&lt;h3&gt;Controllers&lt;/h3&gt;
&lt;p&gt;Testing a controller extension is somewhat easier than testing ActiveRecord extentions, all you basically need to do is to require:&lt;br /&gt;
&lt;pre&gt;require &amp;#8216;action_controller&amp;#8217;&lt;br /&gt;
require &amp;#8216;action_controller/test_process&amp;#8217;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;create &lt;code&gt;routes.rb&lt;/code&gt; under &lt;code&gt;app/config&lt;/code&gt;, add routes to match your controller and &lt;strong&gt;load&lt;/strong&gt; it in &lt;code&gt;test_helper.rb&lt;/code&gt;. Of course you&amp;#8217;ll have to create the controller class under &lt;code&gt;app/controllers/&lt;/code&gt; and the test files under &lt;code&gt;functionals/&lt;/code&gt;.&lt;br /&gt;
Your actual tests should look like regular rails functional tests.&lt;/p&gt;
&lt;h3&gt;Helpers&lt;/h3&gt;
&lt;p&gt;The straight forward approach is to &lt;code&gt;include&lt;/code&gt; the helper&amp;#8217;s class in the matching unit test, and test every helper method. Sometimes some helpers might expect ActiveRecord to be around as well, i suggest mocking (Using Ruby&amp;#8217;s included &lt;a href=&quot;http://ruby-doc.org/stdlib/libdoc/ostruct/rdoc/classes/OpenStruct.html&quot;&gt;OpenStuct&lt;/a&gt;) to avoid the mess.&lt;/p&gt;
&lt;h3&gt;Testing Rake Tasks&lt;/h3&gt;
&lt;p&gt;Some plugins offer rake tasks as part of their functionality, in order to test rake tasks you&amp;#8217;ll need to require rake:&lt;br /&gt;
&lt;pre&gt;require &amp;#8216;rake&amp;#8217;&lt;/pre&gt;&lt;br /&gt;
and quickly setup a rake object on &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;pre&gt;@rake = Rake::Application.new&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;load&lt;/strong&gt; your tasks like you did with the &lt;code&gt;schema.rb&lt;/code&gt; file and invoke tasks in your tests simply by:&lt;br /&gt;
&lt;pre&gt;@rake[&amp;#8220;db:migrate&amp;#8221;].invoke&lt;/pre&gt;&lt;/p&gt;
&lt;h3&gt;Your Rakefile&lt;/h3&gt;
&lt;p&gt;Assuming you generated your plugin with the Rails &lt;code&gt;script/generate plugin&lt;/code&gt; command, you should have a file name &lt;code&gt;Rakefile&lt;/code&gt; in your plugin&amp;#8217;s root directory that looks kind of like that:&lt;br /&gt;
http://gist.github.com/232531&lt;/p&gt;
&lt;p&gt;note that it loads several libs (lines 10-11), replicated these rows to include any library that you wish to include in the search path. In this file i included the &lt;code&gt;lib/&lt;/code&gt; directory so i won&amp;#8217;t have to require my files with a complete path, but by simply specifying their names (&lt;code&gt;require 'my_plugin'&lt;/code&gt; instead of &lt;code&gt;require 'lib/my_plugin'&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;oh yeah, your actual plugin code&lt;/h2&gt;
&lt;p&gt;Well, if your plugin is well structured, you&amp;#8217;ll have a &lt;code&gt;.rb&lt;/code&gt; file under &lt;code&gt;lib/&lt;/code&gt; named like your plugin, and if other files are required as well, that file will be responsible to require them.&lt;br /&gt;
With that being said, the only thing that you&amp;#8217;ll need to do is to actually include that file on &lt;code&gt;test_helper.rb&lt;/code&gt;:&lt;br /&gt;
&lt;pre&gt;require &amp;#8216;lib/my_plugin&amp;#8217;&lt;/pre&gt; will require &lt;code&gt;lib/my_plugin.rb&lt;/code&gt;. on the last note, you&amp;#8217;ll have to include &lt;code&gt;test/unit&lt;/code&gt; as well:&lt;br /&gt;
&lt;pre&gt;require &amp;#8216;test/unit&amp;#8217;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;and you are all set. your plugin is available for standalone testing.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Bag o' Links - 8/11/2009</title>
   <link href="http://blog.eizesus.com/2009/11/bag-o-links-8-11-2009"/>
   <updated>2009-11-08T00:00:00-05:00</updated>
   <id>http://gitready.com/2009/11/bag-o-links-8-11-2009</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.simile-widgets.org/timeline/&quot;&gt;Timeline javascript widget&lt;/a&gt; &amp;#8211; Lots of other cool stuff from the guys that did that  one.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ianvarley.com/UT/MR/Varley_MastersReport_Full_2009-08-07.pdf&quot; title=&quot;PDF&quot;&gt;Non relational databases overview&lt;/a&gt; &amp;#8211; awesome write up by Iam Thomas Varley from the University of Austin,TX.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/closure/&quot;&gt;Closure tools&lt;/a&gt; -The Closure tools help developers to build rich web applications with JavaScript that is both powerful and efficient. The Closure tools include a javascript optimizer, a comprehensive library and a templating system. the optimizers looks solid so far.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/madrobby/extreme-javascript-performance&quot;&gt;Extreme Javascript performance&lt;/a&gt; &amp;#8211; Slides that will make you a better javascript developer.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.hackido.com/2009/11/install-ruby-on-rails-on-ubuntu-karmic.html&quot; title=&quot;Ubuntu 9.10&quot;&gt;Install Ruby on Rails stack on Karmic Koala&lt;/a&gt; &amp;#8211; a fast tutorial for that. glad that&amp;#8217;s covered.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/textmate-missingdrawer/&quot;&gt;Textmate&amp;#8217;s missingdrawer&lt;/a&gt; &amp;#8211; get Textmate a nice looking panel instead of that pesky drawer.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.80legs.com/whatitis.html&quot;&gt;Crawl the web with vengeance&lt;/a&gt; &amp;#8211; 80legs is a service platform for web crawling and processing web content. claims to set 50K &amp;#8220;computers&amp;#8221; by your side for a low cost.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://asemanfar.com/Bluepill:-a-new-process-monitoring-tool&quot;&gt;bluepill server monitoring&lt;/a&gt; &amp;#8211; another member to the growing family of ruby based server monitoring tools, seems easier to setup than God and to have a much more readable syntax than monit. hopefully it will live to my expectations.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://bubbletimer.com/&quot;&gt;BubbleTimer &amp;#8211; track your time&lt;/a&gt; &amp;#8211; i was looking the other week for a small app that will tell me how exactly i am dividing my time. I just wanted to know if i can do stuff a little better and when i found this nice little app, it helped me to create a better day schedule. 20$ per year, is kind of a down side thu.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://iplotz.com/index.php&quot;&gt;iPlotz&lt;/a&gt; &amp;#8211; Lately i came to a complete stop with Balsamiq Mockups, it came to a point where i could not use it to wireframe the layout/UI i wanted so i started hunting for a new candidate, this is one of them &amp;#8211; nice, clean and simple. &lt;a href=&quot;http://www.flairbuilder.com/&quot;&gt;FlairBuilder&lt;/a&gt; is nice as well but my current fav is &lt;a href=&quot;http://www.protoshare.com/&quot;&gt;ProtoShare&lt;/a&gt; &amp;#8211; which also allows collaboration and interactive features.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.digitalhobbit.com/2009/11/08/building-a-twitter-filter-with-sinatra-redis-and-tweetstream/&quot;&gt;Building a twitter filter with sinatra, Redis and TweetStream&lt;/a&gt; &amp;#8211; a tutorial to show the usefulness (maybe) of the new Twitter stream gem, aside from that nice tutorial, if you really want to clear some crap off your twitter stream, head over to &lt;a href=&quot;http://tweetmuffler.com/&quot;&gt;TweetMuffler&lt;/a&gt;, awesome tool to set filters on your Twitter timeline, ninja follow and add searches to your timeline, i love it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.businessinsider.com/how-we-use-mongodb-2009-11&quot;&gt;How this website uses MongoDB&lt;/a&gt; &amp;#8211; real life example to that awesome non relational magic.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://frozenplague.net/2009/11/scoping-by-locales/&quot;&gt;Scoping by locales&lt;/a&gt; &amp;#8211; Ryan Bigg solves another crime.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://agiletesting.blogspot.com/2009/11/automated-deployments-with-puppet-and.html&quot;&gt;Automated deployments with Puppet and Fabric&lt;/a&gt; &amp;#8211; cool tutorial on using Puppet and fabric to automate your server setup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://javascript.open-libraries.com/multimedia/3d/fantastic-javascript-3d-libraries/&quot;&gt;Javascript 3D libraries&lt;/a&gt; &amp;#8211; neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2009/11/5/a-yes-for-a-nosql-taxonomy.html&quot;&gt;a Yes for NoSQL taxonomy&lt;/a&gt; &amp;#8211; overview and presentation on NoSQL, current implementations and common libraries.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.pcworld.com/businesscenter/article/181382/paypal_introduces_open_api_to_put_payments_into_apps.html&quot;&gt;PayPal introduces Open &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/a&gt; &amp;#8211; developers gets a better interface. &lt;span class=&quot;caps&quot;&gt;FINALLY&lt;/span&gt;!&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.webdesignerdepot.com/2009/11/best-practices-for-6-common-user-interface-elements/&quot;&gt;Best practices for commonly used elements&lt;/a&gt; &amp;#8211; how to design search boxes, expendable content and more in a good way.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://robots.thoughtbot.com/post/215005339/sinatra-at-boston-rb-part-1&quot;&gt;Sinatra and Heroku on Boston.rb&lt;/a&gt; &amp;#8211; This is one aweosme group they have there, this time it a first of a series of posts about Sinatra and Heroku.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeo.com/6702766&quot;&gt;UI fundamentals for programmers&lt;/a&gt; &amp;#8211; awesome presentation, best practices for coding templates and helpers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/paolodona/rails-widgets&quot;&gt;RailsWidgets&lt;/a&gt; &amp;#8211; a collection of UI widgets for rails, not sure what that means exactly.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/tobi/liquid-editor&quot;&gt;Liquid Editor&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; Editor for the liquid language (syntax highlighting, basic error checking etc)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rdoc.info/projects/jferris/effigy&quot;&gt;effigy&lt;/a&gt; &amp;#8211; Create usable views in Ruby with &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; and &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; selectors.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 
</feed>