<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Emphasized Insanity</title>
 <link href="http://blog.eizesus.com/feed/atom.xml" rel="self"/>
 <link href="http://blog.eizesus.com/"/>
 <updated>2010-02-27T22:24:43-05:00</updated>
 <id>http://blog.eizesus.com/</id>
 <author>
   <name>Elad Meidar</name>
   <email>elad@eizesus.com</email>
 </author>
 
 
 <entry>
   <title>Using Sinatra to test remote services in Rails</title>
   <link href="http://blog.eizesus.com/2010/02/using_sintara_to_test_remote_services_in_rails-27-2-2010"/>
   <updated>2010-02-27T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/using_sintara_to_test_remote_services_in_rails-27-2-2010</id>
   <content type="html">&lt;p&gt;A few weeks ago i was chatting with &lt;a href=&quot;http://www.ryanbigg.com&quot;&gt;Ryan Bigg&lt;/a&gt; about one of his projects, and he was contemplating about the fact he couldn&amp;#8217;t find a decent way to test a remote &lt;span class=&quot;caps&quot;&gt;XMLRPC&lt;/span&gt; service handling in that application.&lt;/p&gt;
&lt;p&gt;Testing remote service calls like a boss is achieved by using &lt;a href=&quot;http://rubygems.org/gems/fakeweb&quot;&gt;FakeWeb&lt;/a&gt; which is pretty awesome when you work in front of a &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt; web service of something like that, but it does have a really big -1 on it: It binds a mocked response to a &lt;strong&gt;specific url&lt;/strong&gt;, and you can&amp;#8217;t add more responses for that url based on parameters.&lt;br /&gt;
Meaning, basically, that if you want for example to test a web service that requires &lt;span class=&quot;caps&quot;&gt;POST&lt;/span&gt; requests to a specific url, FakeWeb just won&amp;#8217;t cut it.&lt;/p&gt;
&lt;p&gt;So basically, Ryan suggested an idea that seemed nice at the moment: add a Rails metal Rack app to handle those requests.&lt;/p&gt;
&lt;p&gt;Awesome idea, but a few setbacks:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If you don&amp;#8217;t want that application to run on other environments, you&amp;#8217;ll have to scope the behavior to the &lt;em&gt;test&lt;/em&gt; environment only, simple? yeah. but personally i don&amp;#8217;t like having &lt;code&gt;if Rails.env == &quot;test&quot;&lt;/code&gt; in my code.&lt;/li&gt;
	&lt;li&gt;Since we are trying to mock a webservice, we&amp;#8217;ll have to add different handlers in that metal application which can lead to a long, ugly, conditional and eye-ripping unmaintainable code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there I thought, why not just initiate a Sinatra application as part of your tests, and easily manage that sinatra as the mocked web service? &lt;span class=&quot;caps&quot;&gt;WIN&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I created the &lt;a href=&quot;http://rubygems.org/gems/sinatra_fake_webservice&quot;&gt;SinatraFakeWebService&lt;/a&gt; gem that provides a simple interface to instantiate that Sinatra application and to manage the mocked webservice interface.&lt;/p&gt;
&lt;h4&gt;Installation&lt;/h4&gt;
&lt;p&gt;Install the gem:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo gem install sinatra_fake_webservice&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you use bundler or such:&lt;br /&gt;
&lt;code&gt;gem 'sinatra_fake_webservice', :group =&amp;gt; 'test'&lt;/code&gt; &lt;br /&gt;
should do it.&lt;/p&gt;
&lt;h4&gt;Usage&lt;/h4&gt;
&lt;p&gt;In your &lt;code&gt;test_helper.rb&lt;/code&gt; or the Cucumber/rSpec equivalent:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/317143.js?file=test_helper.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;and tests:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/317143.js?file=test_webservice.rb&quot;&gt;&lt;/script&gt;&lt;h4&gt;todos&lt;/h4&gt;
&lt;p&gt;If this would be proven as useful, i&amp;#8217;ll probably add a better &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; for the interaction other than the ugly &lt;em&gt;Net::&lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt;&lt;/em&gt; all over.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 23/2/2010</title>
   <link href="http://blog.eizesus.com/2010/02/bag-o-links-23-2-2010"/>
   <updated>2010-02-23T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bag-o-links-23-2-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/02/23/shalom-showcase-of-web-design-in-israel/&quot;&gt;Israeli web design&lt;/a&gt; &amp;#8211; a really good writeup on SmashingMagazine on the difficulties of&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.queness.com/post/2291/20-gorgeous-free-fonts-for-your-headlines&quot;&gt;20 Free fonts for your headlines&lt;/a&gt; &amp;#8211; most of them are nice, keep in mind readability is an important aspect of headlines.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railsupgradehandbook.com/&quot;&gt;Rail 3 upgrade handbook&lt;/a&gt; &amp;#8211; out and for only 12$, worths it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.patmaddox.com/2010/02/22/use_long_method_names_that_say_what_they_do/&quot;&gt;Using long methods name for better readability&lt;/a&gt; &amp;#8211; longer methods names == reader have a better chance of knowing what they do.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://railsontherun.com/2010/02/22/speed-up-your-rails-xml-responses/&quot;&gt;Speeding up &lt;span class=&quot;caps&quot;&gt;XML&lt;/span&gt; responses in Rails&lt;/a&gt; &amp;#8211; switching the backend to Nokogiri. i&amp;#8217;d add that a smart caching tactic would make even more sense.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://justinfrench.com/index.php?id=265&quot;&gt;Learn to test your code&lt;/a&gt; &amp;#8211; a good advice for new developers.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://atomicnoggin.ca/blog/2010/02/20/pure-css3-pie-charts/&quot;&gt;Pure CSS3 charts&lt;/a&gt; &amp;#8211; quick tutorial.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pivotallabs.com/users/steve/blog/articles/262-rails-slashdotted-no-problem&quot;&gt;Rails, Slashdotted, no problem&lt;/a&gt; &amp;#8211; how PivotalLabs handled a traffic boost on a client project.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://shiftcommathree.com/articles/make-your-rails-maintenance-page-respond-with-a-503&quot;&gt;Using a 503 &lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt; response in your application on maintenance&lt;/a&gt; &amp;#8211; sounds good.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.stevesouders.com/blog/2010/02/15/browser-performance-wishlist/&quot;&gt;Browser wishlist&lt;/a&gt; &amp;#8211; Steve wants a few more things done better, me too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://terrbear.org/?p=233&quot;&gt;Bling gem management&lt;/a&gt; &amp;#8211; bundler isn&amp;#8217;t even stable yet, and there&amp;#8217;s already a replacement.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://zigzag.github.com/2010/02/14/from-textmate-to-vim-for-rails-coders.html&quot;&gt;From Textmate to Vim&lt;/a&gt; &amp;#8211; move from Textmate to vim, easily.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://webreflection.blogspot.com/2010/02/javascript-overload-patterns.html&quot;&gt;Javascript overload patterns&lt;/a&gt; &amp;#8211; how to implement overloading in native javascript.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2010/02/18/framework/&quot;&gt;Let&amp;#8217;s make a framework&lt;/a&gt; &amp;#8211; DailyJS are going though a javascript framework development, interesting.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nosql.mypopescu.com/post/398352022/recipes-for-using-nosql-solutions&quot;&gt;Recipes for using noSQL solutions&lt;/a&gt; &amp;#8211; get help to decide if your project should use a noSQL solution.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.royans.net/arch/library/&quot;&gt;Scalable web architecture library&lt;/a&gt; &amp;#8211; lots of good reads of many use cases.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railway.at/2010/02/13/avoiding-rails-3-dependency-hell-with-rvm/&quot;&gt;avoiding rails 3 dependency hell with rvm&lt;/a&gt; &amp;#8211; skip hell and rest.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://spreadsheets.google.com/ccc?key=0AuiEX8D0wiR7dGs5WFc1RzZkZnNkYTQtOFFiVFJ2a3c&amp;amp;hl=en&quot;&gt;Hourly rate survey&lt;/a&gt; &amp;#8211; weird actually, i don&amp;#8217;t think it can point out something beyond particular reference.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/make-your-mootools-code-shorter-faster-and-stronger/&quot;&gt;make a better MooTools code&lt;/a&gt; &amp;#8211; good tips.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/toolmantim/toadhopper-sinatra&quot;&gt;toadhopper-sinatra&lt;/a&gt; &amp;#8211; Post Hoptoad notifications from Sinatra.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://crackersnack.com/blog/2010/2/19/announcing-the-currencies-gem.html&quot;&gt;Currencies&lt;/a&gt; &amp;#8211; Money gem gets currencies. win.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://inlinestyler.torchboxapps.com/styler/&quot;&gt;Converting &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; to inline &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;&lt;/a&gt; &amp;#8211; easily make email templates.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://penguin.theopalgroup.com/cgi-bin/css3explainer/selectoracle.py&quot;&gt;Selectoracle&lt;/a&gt; &amp;#8211; translate &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; selector statements to english/spanish.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/query_trace&quot;&gt;query_trace&lt;/a&gt; &amp;#8211; a new version for this great tool.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/johanoskarsson/cassandra-ec2&quot;&gt;cassandra-ec2&lt;/a&gt; &amp;#8211; easily deploy a cassandra cluster on EC2.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/airblade/paper_trail&quot;&gt;PaperTrail&lt;/a&gt; &amp;#8211; Track changes to your models&amp;#8217; data. Good for auditing or versioning.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/perfectline/locale_routing&quot;&gt;local-routing&lt;/a&gt; &amp;#8211; Detects and handles locale from request URLs, prepends locale for generated URLs by wrapping itself around Rails ActionController::Routing methods.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 16/2/2010</title>
   <link href="http://blog.eizesus.com/2010/02/bag-o-links-16-2-2010"/>
   <updated>2010-02-16T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bag-o-links-16-2-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://shiftcommathree.com/articles/how-to-install-mongodb-on-os-x&quot;&gt;Installing MongoDB on MacOS&lt;/a&gt; &amp;#8211; me thinks it&amp;#8217;s the simplest way i came across.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeo.com/6702444&quot;&gt;On domains and databases&lt;/a&gt; &amp;#8211; a nice (and long) presentation by Ben scofield on an alternatives to relational databases in common domains.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://idkn.wordpress.com/2009/03/15/why-i-find-mysql-to-be-so-bad/&quot;&gt;Why i find MySQL to be so bad&lt;/a&gt; &amp;#8211; a nice writeup by my friend &lt;a href=&quot;http://twitter.com/idokan&quot;&gt;@idokan&lt;/a&gt;, he finds MySQL to be disturbing sometimes and provides some good points.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://learnyouahaskell.com/chapters&quot;&gt;Learn you Haskell&lt;/a&gt; &amp;#8211; I started playing with Haskell a few months ago, i must say it&amp;#8217;s a pretty nice language although syntax is hard for the Rubist that i am, &lt;a href=&quot;http://www.engineyard.com/blog/2010/a-hint-of-hubris/&quot;&gt;Hubris&lt;/a&gt; seems to allow me to enjoy both worlds tho.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://wtfjs.com/&quot;&gt;wtfJS&lt;/a&gt; &amp;#8211; a man&amp;#8217;s struggle against Javascript weirdness.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://duckpunching.com/passenger-mod_rails-for-development-now-with-debugger&quot;&gt;Passenger heart ruby-debug&lt;/a&gt; &amp;#8211; how do people live without it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://carlos.bueno.org/2010/02/measuring-javascript-parse-and-load.html&quot;&gt;The hidden cost of Javascript&lt;/a&gt; &amp;#8211; Carlos attempts to perform &lt;strong&gt;real&lt;/strong&gt; benchmarking taking more variables in mind. on another note &lt;span class=&quot;caps&quot;&gt;IBM&lt;/span&gt; is trying to &amp;#8220;compare between leading javascript libraries&amp;#8221; out there.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://openbit.co.uk/?p=135&quot;&gt;HTML5 WebSQL&lt;/a&gt; &amp;#8211; Another shiny HTML5 &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; magic, and it&amp;#8217;s just what i asked for christmas! another db to maintain!&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://lindsaar.net/how-to-make-an-rss-feed-or-atom-feed-in-rails&quot;&gt;Quick way to create &lt;span class=&quot;caps&quot;&gt;RSS&lt;/span&gt; feeds in Rails&lt;/a&gt; &amp;#8211; now we haz it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ai.mee.nu/seeking_a_database_that_doesnt_suck&quot;&gt;Seeking a database that doesn&amp;#8217;t suck&lt;/a&gt; &amp;#8211; so am i (loving Mongo now btw). Author does have a good overview of the current actors out there, even if his personal opinion is sometimes incorrect.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gilesbowkett.blogspot.com/2010/02/bundler-schmundler.html&quot;&gt;Bundler Schmundler&lt;/a&gt; &amp;#8211; someone is not happy about current changes and approach with Bundler, i must say that in general i can&amp;#8217;t seem to understand the need to break backward compatibility so fast and so hard.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://thechangelog.com/post/382278264/riak-high-performance-document-store-built-on-json-and-r&quot;&gt;Riak&lt;/a&gt;  &amp;#8211; an interesting late joiner to the party of document storing databases, there is a &lt;a href=&quot;http://thechangelog.com/post/383049531/ripple-ruby-client-for-riak&quot;&gt;Ruby client named Ripple&lt;/a&gt; too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.coffeepowered.net/2010/02/10/safe-action-caching-with-memcached/&quot;&gt;Safe action caching with Memcached&lt;/a&gt; &amp;#8211; preventing Memcached from going crazy over silly chars getting in the way.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.codethatmatters.com/2010/01/git-autocomplete-in-mac-os-x/&quot;&gt;Git autocomplete in MacOS&lt;/a&gt; &amp;#8211; OH &lt;span class=&quot;caps&quot;&gt;YEAH&lt;/span&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://weblog.rubyonrails.org/2010/2/9/plugin-authors-toward-a-better-future&quot;&gt;Plugin authors: Towards a better future&lt;/a&gt; &amp;#8211; some instructions on the recent Rails 3 related plugin approach changes. Again, was breaking backwards compatibility right here and now was necessary?.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/02/09/applying-mathematics-to-web-design/&quot;&gt;Applying mathematics in web design&lt;/a&gt; &amp;#8211; golden ratio hits again.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ingraminternet.com/posts/18-textmate-ruby-1-9-1-and-rvm-the-facts&quot;&gt;Textmate + ruby1.9.1 + rvm&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://twitter.com/pjammer&quot;&gt;@pjammer&lt;/a&gt; makes them play nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mongodb.org/display/DOCS/Indexing+as+a+Background+Operation&quot;&gt;Indexing as a Background process on Mongo&lt;/a&gt; &amp;#8211; now available at stores near you.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.mongodb.org/post/381927266/what-about-durability&quot;&gt;MongoDB&amp;#8217;s single server durability&lt;/a&gt; &amp;#8211; explained.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://javascript.crockford.com/javascript.html&quot;&gt;Javascript is the most misunderstood language&lt;/a&gt; &amp;#8211; is it?&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.barelyfitz.com/screencast/html-training/css/positioning/&quot;&gt;Lears &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; positioning in 10 steps&lt;/a&gt; &amp;#8211; i love the new wave of small &amp;#8220;tour guide&amp;#8221; web apps to learn stuff.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ryanbigg.com/2010/02/congratulations/&quot;&gt;Congratulations&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://ryanbigg.com/2010/02/congratulations/&quot;&gt;@ryanbigg&lt;/a&gt; on possible choices in the life of a developer, and how a proper methodology can get you want you want and need.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/ezmobius/redis-remote-dictionary-server&quot;&gt;Redis presentation &amp;#8211; use cases&lt;/a&gt; &amp;#8211; nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nosql.mypopescu.com/post/385372130/your-chance-to-review-the-fosdem-nosql-event#fosdem-ericevans&quot;&gt;Lots of other noSQL presentations&lt;/a&gt; &amp;#8211; woot.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.scottmoe.info/2009/04/18/my-apache-configuration-for-ruby-on-rails-with-passenger&quot;&gt;Example apache configuration for Rails on Passenger&lt;/a&gt; &amp;#8211; including some caching headers and extra mods.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.web2media.net/laktek/2010/02/16/building-real-time-web-apps-with-rails3/&quot;&gt;Real time cramp app on Rails3&lt;/a&gt; &amp;#8211; a quick example.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/assaf/highfive&quot;&gt;HighFive&lt;/a&gt; &amp;#8211; HTML5/CSS3/jQuery goodness for Rails.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jim/carmen&quot;&gt;Carmen&lt;/a&gt; &amp;#8211; A simple collection of geographic names and abbreviations for Rails apps (includes replacements for country_select and state_select).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/hmcgowan/roo&quot;&gt;roo&lt;/a&gt; &amp;#8211; Roo provides an interface to Open Office, Excel, and Google Spreadsheets.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.liquidx.net/plotkit/&quot;&gt;PlotKit&lt;/a&gt; &amp;#8211; javascript graphs and plots.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mynyml/harmony&quot;&gt;Harmony&lt;/a&gt; &amp;#8211; Javascript + &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; in your ruby, the simple way.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nanoc.stoneship.org/&quot;&gt;Nanoc&lt;/a&gt; &amp;#8211; another quick publishing tool in Ruby, jekyll style.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/cardmagic/contacts&quot;&gt;Contacts&lt;/a&gt; &amp;#8211; A universal interface to import email contacts from various providers including Yahoo, Gmail, Hotmail, &lt;span class=&quot;caps&quot;&gt;AOL&lt;/span&gt; and Plaxo.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jweiss/rocking_chair&quot;&gt;RockingChair&lt;/a&gt; &amp;#8211; An in-memory CouchDB implementation in Ruby for Couchrest and SimplyStored.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://philosophyofweb.com/2010/02/redweb-a-web-interface-for-redis/&quot;&gt;Redweb&lt;/a&gt; &amp;#8211; a web interface for Redis.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/bhuga/quantity&quot;&gt;Quantity&lt;/a&gt; &amp;#8211; Quantity descriptions for ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://bgrepeat.com/&quot;&gt;BGrepeat&lt;/a&gt; &amp;#8211; backgrounds, lots.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 9/2/2010</title>
   <link href="http://blog.eizesus.com/2010/02/bag-o-links-9-2-2010"/>
   <updated>2010-02-09T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bag-o-links-9-2-2010</id>
   <content type="html">&lt;p&gt;Feels good to be back on a Bag o Links routine.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/296719&quot;&gt;Get your database size rake task&lt;/a&gt; &amp;#8211; a little toy i made and &lt;a href=&quot;http://afreshcup.com&quot;&gt;Mike&lt;/a&gt; improved, additions are welcome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gregosuri.com/how-facebook-uses-erlang-for-real-time-chat&quot;&gt;How facebook uses erlang for real-time chat&lt;/a&gt; &amp;#8211; erlang jabber implementation, that&amp;#8217;s got to be good.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://petewarden.typepad.com/searchbrowser/2010/01/mapreduce-for-idiots.html&quot;&gt;MapReduce for idiots&lt;/a&gt; &amp;#8211; or just for those who never took the time to read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.idiotsabound.com/did-i-mention-mongodb-is-fast-way-to-go-mongo&quot;&gt;MongoDB vs. CouchDB vs. Mysql&lt;/a&gt; &amp;#8211; mongo is fast indeed, but the atomic actions benefits of Couch are still appealing.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/web/library/wa-memleak/&quot;&gt;Memory leaks in Javascript&lt;/a&gt; &amp;#8211; how to prevent and identify possible leaks and probably save a few Firefox users out there.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.switchonthecode.com/tutorials/javascript-tutorial-why-the-this-keyword-breaks&quot;&gt;Why Javascript&amp;#8217;s &amp;#8216;this&amp;#8217; breaks&lt;/a&gt; &amp;#8211; when &lt;code&gt;window&lt;/code&gt;, object or scope wins.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.switchonthecode.com/tutorials/javascript-objects-a-useful-example&quot;&gt;Javascript objects, a simple example&lt;/a&gt; &amp;#8211; yes, it is simple.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.digimonkey.com/2010/01/mongosphinx-with-mongodb-and-mongomapper/&quot;&gt;MongoMapper and MongoSphinx, a party!&lt;/a&gt; &amp;#8211; make sphinx play nice with mongo.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.opensourcery.co.za/2010/02/08/paginating-documents-with-couchrest-and-will_paginate/&quot;&gt;Paginating with CouchREST and will_paginate&lt;/a&gt; &amp;#8211; Overriding &lt;code&gt;WillPaginate::Collection.create&lt;/code&gt; is the solution i guess.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.rubyinside.com/rails-3-0-beta-links-2966.html&quot;&gt;Rails 3 links and resources&lt;/a&gt; &amp;#8211; from rubyinside, here&amp;#8217;s another one from Yehuda Katz on the new &lt;a href=&quot;http://yehudakatz.com/2010/02/09/using-bundler-in-real-life/&quot;&gt;Bundler&lt;/a&gt; and real life usage.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://boldr.net/upgrade-plugins-gems-rails-3/&quot;&gt;How to upgrade plugins for Rails 3&lt;/a&gt; &amp;#8211; also, remember to update the record on &lt;a href=&quot;http://railsplugins.org&quot;&gt;RailsPlugins&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.mostof.it/posts/why-ruby-part-three-method-arguments/&quot;&gt;Why Ruby? series &amp;#8211; method arguments&lt;/a&gt; &amp;#8211; a nice series of posts covering that dude&amp;#8217;s view on Ruby.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://yehudakatz.com/2010/02/07/the-building-blocks-of-ruby/&quot;&gt;The building blocks of ruby&lt;/a&gt; &amp;#8211; Yehuda shows the power of blocks in a set of nice examples.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/quick-tip-how-to-extend-built-in-objects-in-javascript/&quot;&gt;Extending native objects in Javascript&lt;/a&gt; &amp;#8211; prototyping for beginners.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.hakeraj.com/method-definitions-javascript-style&quot;&gt;Dynamic methods in Ruby &amp;#8211; javascript style&lt;/a&gt; &amp;#8211; nice, a bit kinky&amp;#8230; but nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.romancortes.com/blog/pure-css-coke-can/&quot;&gt;Rolling coke can &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;&lt;/a&gt; &amp;#8211; nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.peepcode.com/tutorials/2010/what-pythonistas-think-of-ruby&quot;&gt;What pythonists think of Ruby&lt;/a&gt; &amp;#8211; peepcode writeup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://almosteffortless.com/2010/02/08/cloudfront-no-brainer-cdn-support-for-s3/&quot;&gt;CloudFront &amp;#8211; no brainer &lt;span class=&quot;caps&quot;&gt;CDN&lt;/span&gt; for S3&lt;/a&gt; &amp;#8211; A very fast change that can help many, but i am still having trouble with CloudFront&amp;#8217;s expiry options that do not fit any case.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mr-flow.com/mrflow/user/html/home.do&quot;&gt;mr.flow&lt;/a&gt; &amp;#8211; compose MapReduce modules online.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://chriseppstein.github.com/blog/2010/02/08/haml-sucks-for-content/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt; sucks for content&lt;/a&gt; &amp;#8211; some good points added to the ongoing war.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.cloudxl.com/&quot;&gt;CloudXL &amp;#8211; Cloud service providers&lt;/a&gt; &amp;#8211; a list of Cloud service providers around, filterable too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://graysky.org/2010/02/downtime-postmortem/&quot;&gt;Downtime postmortem&lt;/a&gt; &amp;#8211; oneforty went down, this is how they are learning from it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/2/8/how-farmville-scales-to-harvest-75-million-players-a-month.html&quot;&gt;How Farmville scales&lt;/a&gt; &amp;#8211; the most annoying (and largest) facebook game scaling solutions.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.52framework.com/&quot;&gt;52frameworks&lt;/a&gt; &amp;#8211; HTML5 + CSS3 framework.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://woorkup.com/2010/02/07/anatomy-of-the-perfect-sidebar/&quot;&gt;Anatomy of a perfect sidebar&lt;/a&gt; &amp;#8211; woork&amp;#8217;s magic.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://seancribbs.com/tech/2010/02/06/why-riak-should-power-your-next-rails-app/&quot;&gt;Why Riak for your next Rails app is a good idea&lt;/a&gt; &amp;#8211; Chris takes another direction in the noSQL land.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.matthewhutchinson.net/2010/2/7/fake-it-till-you-make-it&quot;&gt;Fake it till you make it&lt;/a&gt; &amp;#8211; a faker rake task.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/maxim/sogger&quot;&gt;sogger&lt;/a&gt; &amp;#8211; a StackOverFlow growler&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/maxim/html_press&quot;&gt;html_press&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; and Rack middleware for &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; compression with caching support.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/ffmike/auto-session-timeout&quot;&gt;auto-session-timeout&lt;/a&gt; &amp;#8211; this is a JQuery version, original is a prototype version.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/cloudhead/toto&quot;&gt;toto&lt;/a&gt; &amp;#8211; quick blog on Heroku.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;</content>
 </entry>
 
 <entry>
   <title>GitHub post - Afterthoughts</title>
   <link href="http://blog.eizesus.com/2010/02/github-post-afterthoughts-8-2-2010"/>
   <updated>2010-02-08T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/github-post-afterthoughts-8-2-2010</id>
   <content type="html">&lt;p&gt;My lat &amp;#8216;Bye Bye Github&amp;#8217; post caused a far more mess than i initially intended it will, my one and only goal by posting it was to express my thoughts as a user, thoughts which apparently came out a bit too harsh and i am sorry if it hurt someone, i wasn&amp;#8217;t aiming for that.&lt;/p&gt;
&lt;p&gt;I felt like it is necessary that i will explain things a little more and maybe put an end to this witch hunt that was swirling in both of Github&amp;#8217;s direction and mine.&lt;/p&gt;
&lt;p&gt;Most people came to realize somehow that i &lt;strong&gt;demand&lt;/strong&gt; &lt;span class=&quot;caps&quot;&gt;SLA&lt;/span&gt; for 7$/m, Well, i&amp;#8217;m not. Although i do not hold the 200$/m plan on the other hand, i&amp;#8217;d like to think that it&amp;#8217;s reasonable to want leap in expected level of service once you start taking money from people, and again when you start hosting Mission Critical apps. It&amp;#8217;s no secret that i am not the only one disappointed with Github&amp;#8217;s uptime history. Yes, they always explain what caused the downtime and I&amp;#8217;m glad that they do, But explaining what&amp;#8217;s wrong isn&amp;#8217;t enough, though.&lt;/p&gt;
&lt;p&gt;They try, i know, they have the parts there that show that they really try to make things better, like &lt;span class=&quot;caps&quot;&gt;DRBD&lt;/span&gt;, but when things go wrong everything breaks anyway. Basically it&amp;#8217;s like making backups but never testing them, and that is the thing that annoys me the most, You can easily compare that to my mistake in my deployment process on those 3 projects that got delayed this week.&lt;/p&gt;
&lt;p&gt;I am absolutely sure Github will get better, they have some awesome people working there and they are hosted in a wonderful place but it has nothing to do with the fact that i can always &amp;#8220;go somewhere else where they have better uptime and reliability&amp;#8221; until the reach my &lt;strong&gt;personal&lt;/strong&gt; service requirement as a paid service.&lt;/p&gt;
&lt;p&gt;Yes, it is my responsibility as a business owner to choose the right tools and craft the right processes in order to provide a sustainable toolset for my clients and team members.&lt;br /&gt;
All the backups in the world, 500 mirror sites and nothing else couldn&amp;#8217;t have helped me get my deployments out because i needed a way to pull from the master, and because of &lt;strong&gt;my buggy process&lt;/strong&gt; (weird situation as it is) regardless Github&amp;#8217;s outage i was delayed by 2 hours.&lt;/p&gt;
&lt;p&gt;The basic problem was the fact we work as an international team, although usually it works amazingly well. When you need a 24/h development cycle in your team, having 50% of the team still working when the other half is sound asleep in the other side of the world is a wonderful thing. The problem started when one on my Israeli developers (&lt;span class=&quot;caps&quot;&gt;GMT&lt;/span&gt; &amp;#8211; 5), had committed his last feature to master and acknowledged that i can issue a move to a staging server, ready to deliver a copy to the client as the contract expect.&lt;/p&gt;
&lt;p&gt;Up until early this morning I didn&amp;#8217;t keep the &lt;span class=&quot;caps&quot;&gt;SSH&lt;/span&gt; keys for all the developers machines so when my developer went to his long overdue vacation (leaving the laptop at home obviously) i was left with no access to his local copy, Github being down, and overall stuck. Yes, this is a faulty project management. Yes it is already fixed in the form of adding another remote repository on CodebaseHQ and having all keys (except that guy&amp;#8217;s) set on my machine as well.&lt;/p&gt;
&lt;p&gt;Coming to think about it, even if the basic process error was indeed mine as a project manager, i expect a high service level from every service and get i pay for. This is why i am driving a mercedes and not on a bus, this is why i live in a house with impact windows and this is why i use a Mac and not Windows.&lt;/p&gt;
&lt;p&gt;I can&amp;#8217;t create a fault tolerant procedure for every in house project, it would cost a lot more than we can back up and i will spend a lot more time on it than working on our projects and this is why we pay 3rd parties to take those internal processes out of our hand and deliver us a product back.&lt;/p&gt;
&lt;p&gt;I don&amp;#8217;t see the reason of holding a double or a triple safety net for everything that we do in here, will i need 2 accountants now? a generator in addition to UPSs? it is very hard to draw the line where you fully trust a service you pay for and when you don&amp;#8217;t and how you feel about it even.&lt;/p&gt;
&lt;p&gt;Today, Github contact me to explain their side of the deal and also offered to park my account for a few months as an act of good service. Although it was very nice of them (as usual, their support was always awesome) i decided not to take it, keeping in mind it might seal this whole thing with an ugly stamp. Thank you Github, but we&amp;#8217;ll just have to meet again in 3-6 months.&lt;/p&gt;
&lt;p&gt;I hope this will bring an end to this whole thing, tomorrow it&amp;#8217;s back to &amp;#8220;Bag o Links&amp;#8221; routine.&lt;/p&gt;
&lt;p&gt;As a last note, I got all kinds of responses, thought it might help to clear those out:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#8220;Git is decentralized, how did you screw that up?&amp;#8221;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yes, that&amp;#8217;s true. i covered the reasons why it couldn&amp;#8217;t have helped me in our specific situation.&lt;br /&gt;
Yes, we should have thought about it earlier and we&amp;#8217;ll have to change that in order to make a smoother slide next time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#8220;He should have just installed Gitosis&amp;#8221;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Again, why should i bother when there are services our there offer to do all the hard work for us? assuming i ask one of our developers to install gitosis, being payed 75$/h it should take apprx 6 minutes &lt;strong&gt;a month&lt;/strong&gt; to maintain it in order to match Github&amp;#8217;s lowest offer. makes sense? not for me. some people, including me, prefer to pay money for a properly designed git workflow than to deal with the hassle of doing it themselves. I would happily pay Github even 4 times the current rates they are taking if i was certain it would grant me my peace of mind.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#8220;Fix your grammar&amp;#8221;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sorry, not a native english speaker.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#8220;If you want &lt;span class=&quot;caps&quot;&gt;SLA&lt;/span&gt;, pay for it!&amp;#8221;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I will, where?&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Bye Bye Github</title>
   <link href="http://blog.eizesus.com/2010/02/bye-bye-github-7-2-2010"/>
   <updated>2010-02-07T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bye-bye-github-7-2-2010</id>
   <content type="html">&lt;p&gt;Being a software developer these days, is 90% about having a high quality of service, when you are becoming a serious part of this business you have to keep up with the expectations, especially if you are a providing an essential basic tool for developers all over the world.&lt;/p&gt;
&lt;p&gt;I love Github, it&amp;#8217;s a very simple tool and made it very easy to collaborate code, find open source projects you want to participate in and basically replaced the need to manage your own source control server.&lt;/p&gt;
&lt;p&gt;Github are also offering a free account as we all know and their actual paid accounts are not that expensive and start from 7$ which gives you theoretically, a good bang for a buck.&lt;/p&gt;
&lt;p&gt;But this is where the fun part ends.&lt;/p&gt;
&lt;p&gt;As a business owner and a person that relies on services such as Github to provide efficient support and operation, i&amp;#8217;ve decided based on the following week fiasco to drop my personal and &lt;a href=&quot;http://www.nautilus6.com&quot;&gt;Nautilus6&lt;/a&gt; &amp;#8217;s paid account on GitHub and look for an alternative.&lt;/p&gt;
&lt;p&gt;This decision is based on my will to operate my business in a professional, coordinated and responsible matter and as i am responsible on getting things done in time for my clients, i am also obligated to make a right choice if i choose to use a 3rd party service such as Github.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not a new phenomenon that Github goes down, and to be honest i don&amp;#8217;t blame the hosting companies (EngineYard in the past and Rackspace at the momemt) since i am a loyal user of other large scale applications hosted successfully, silently and professionally in those companies.&lt;/p&gt;
&lt;p&gt;I blame Github. And why? because Github acts like a toy, and when a service acts like a toy, it loses it&amp;#8217;s right to be in my professional company toolset.&lt;br /&gt;
By saying &amp;#8220;act like a toy&amp;#8221;, i mean &amp;#8220;not acting like a real, serious business&amp;#8221;, a real serious business would have created an infrastructure that will provide &lt;strong&gt;paying customers a better redundancy for their accounts&lt;/strong&gt;, a serious decision that would prevent my (and others) paid account to go down due to overload caused by free account, useless forks and god knows what.&lt;br /&gt;
I do not accept the excuse of &amp;#8220;we have more users than we expected and when we had less it was fine&amp;#8221; &amp;#8211; that kind of stuff doesn&amp;#8217;t work, someone should have thought about it before.&lt;/p&gt;
&lt;p&gt;Taking the responsibility of being a serious service provider holds more to it than to have cute animal sketches pop up on your 500 error pages, and as much as i like that octu-cat or whatever it was, i like my happy clients more. But when in one way or another, i delayed 3 client deploys in the past week due to Github&amp;#8217;s downtime, i see that this responsibility is not taken or taken for granted. &lt;br /&gt;
Some of you may say &amp;#8220;so why don&amp;#8217;t you use a local ssh deploy&amp;#8221; or something like that, Why? simple.  Because i pay Github, and i want to get the service i am paying for, and yes, i want the service i am paying for &lt;strong&gt;before&lt;/strong&gt; free accounts get it.&lt;/p&gt;
&lt;p&gt;As far as my public repositories, they will stay on Github unless something dead serious will happen (doubt it) and since i prefer not to manage our own git server at Nautilus6, i&amp;#8217;d go for one of the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.unfuddle.com&quot;&gt;Unfuddle&lt;/a&gt; &amp;#8211; They also have some free accounts, give out both svn (yak) and git support. comes a long with a ticketing system as well.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://bitbucket.org/plans/&quot;&gt;bitbucket&lt;/a&gt; &amp;#8211; been hearing some good reviews on these guys, even cheaper than Github.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://repositoryhosting.com/&quot;&gt;Repository Hosting&lt;/a&gt; &amp;#8211; one plan, all included. really looks good&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.codebasehq.com/&quot;&gt;CodeBaseHQ&lt;/a&gt; &amp;#8211; actually my favorite for now, simple, clean and fun.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://repo.or.cz/&quot;&gt;repo.or.cz&lt;/a&gt; &amp;#8211; an open source project too, haven&amp;#8217;t tried this one yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And i am not forgetting &lt;a href=&quot;http://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; which proves to be an extremely reliable service and for some projects that&amp;#8217;s all you really need, service and cost wise.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Facebooker tips 1 - SessionExpired, Cucumber and Default environment</title>
   <link href="http://blog.eizesus.com/2010/02/facebooker-tips-1-session-expiry-cucumber-and-env-6-2-2010"/>
   <updated>2010-02-06T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/facebooker-tips-1-session-expiry-cucumber-and-env-6-2-2010</id>
   <content type="html">&lt;p&gt;For my next project i have to use &lt;a href=&quot;http://gemcutter.org/gems/facebooker&quot;&gt;Facebooker&lt;/a&gt;, which is currently the most stable Ruby gem that wraps the Facebook &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;.&lt;br /&gt;
Sadly it&amp;#8217;s very badly documented and for the past 2 projects i&amp;#8217;ve been using it, i remember exactly why i don&amp;#8217;t really like this library.&lt;/p&gt;
&lt;p&gt;So why do i use it and don&amp;#8217;t write our own implementation? we&amp;#8217;ll we do. but it will take some time since the Facebook API&amp;#8217;s own documentation is a world of pain and we are not going to make the same mistake again and make a library with poor documentation.&lt;/p&gt;
&lt;p&gt;So for the meanwhile, i&amp;#8217;ll just post some useful tips we find along the way and might help others getting things to work:&lt;/p&gt;
&lt;h4&gt;Tip #1: SessionExpired&lt;/h4&gt;
&lt;p&gt;Yeah, i posted how to handle &lt;a href=&quot;http://blog.eizesus.com/2009/11/handle-facebook-session-expiry-with-facebooker/&quot;&gt;Facebook&amp;#8217;s stupid Session Expiry&lt;/a&gt;  in a safe manner before, thought it worth mentioning again.&lt;/p&gt;
&lt;h4&gt;Tip #2: Test your Facebook application with Facebook&lt;/h4&gt;
&lt;p&gt;Oh this was hell, there was absolutely no documentation about how to mock a facebook user and &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; interaction if you use Cucumber. I did find &lt;a href=&quot;http://opensoul.org/2009/3/6/testing-facebook-with-cucumber&quot;&gt;this&lt;/a&gt; tutorial which, just doesn&amp;#8217;t work.&lt;/p&gt;
&lt;p&gt;So for example if we use this scenario:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/296758.js?file=manage_users.feature&quot;&gt;&lt;/script&gt;&lt;p&gt;And this is how the step goes:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/296758.js?file=user_steps.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;Note the usage of &lt;code&gt;User#facebook_user&lt;/code&gt;, which basically returns a &lt;code&gt;Facebooker::User&lt;/code&gt; instance:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/296758.js?file=user.rb&quot;&gt;&lt;/script&gt;&lt;h4&gt;Cucumber&amp;#8217;s default environment&lt;/h4&gt;
&lt;p&gt;Cucumber runs on it&amp;#8217;s own environment, default named &lt;code&gt;Cucumber&lt;/code&gt;, so when you get something like that trying to run your features:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/296759.js?file=gistfile1.txt&quot;&gt;&lt;/script&gt;&lt;p&gt;All you need to do is just to add another environment named &lt;code&gt;cucumber&lt;/code&gt; in &lt;code&gt;config/facebooker.yml&lt;/code&gt; :&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/296763.js?file=facebooker.yml&quot;&gt;&lt;/script&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 5/2/2010</title>
   <link href="http://blog.eizesus.com/2010/02/bag-o-links-5-2-2010"/>
   <updated>2010-02-05T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bag-o-links-5-2-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://railsplugins.org/&quot;&gt;Is your plugin ready for Rails 3?&lt;/a&gt; &amp;#8211; add yours even if it&amp;#8217;s not.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.readwriteweb.com/start/2010/01/legal-resources-for-startups.php&quot;&gt;Legal resources for Startups and entrepreneurs&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/how-to-test-your-javascript-code-with-qunit/&quot;&gt;Test your Javascript with QUnit&lt;/a&gt; &amp;#8211; for those of you that don&amp;#8217;t write perfect code.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ryanflorence.com/jquery-1-4-mootools-1-2-compared&quot;&gt;jQuery 1.4 vs MooTools 1.2&lt;/a&gt; &amp;#8211; just like comparing Apples and Oranges in my opinion, but anyway this is a good collection of snippets in both frameworks, regardless to the fact that i don&amp;#8217;t care what the final conclusion is.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.logankoester.com/bayesian-classification-on-rails&quot;&gt;Bayesian classification in Rails&lt;/a&gt; &amp;#8211; a simple tutorial, might come really handy in a project i have coming up.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://carsonified.com/blog/dev/bulletproof-backups-for-mysql/&quot;&gt;Bulletproof backups for your MySQL&lt;/a&gt; &amp;#8211; i personally don&amp;#8217;t believe in bulletproof stuff, but it does look like a very comprehensive tutorial.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://mediumexposure.com/scriptmigrator-for-navigating-migrations/&quot;&gt;script/migrator to navigate through your migrations&lt;/a&gt; &amp;#8211; another awesome tool from &lt;a href=&quot;http://twitter.com/hakunin&quot;&gt;@hakunin&lt;/a&gt;, this time a simple migration navigator which by coincidence is also going to be the last member of Rails&amp;#8217;s `script/` library. &lt;span class=&quot;caps&quot;&gt;RIP&lt;/span&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://thenoisychannel.com/2010/01/31/linkedin-search-a-look-beneath-the-hood/&quot;&gt;Linkedin new search, under the hood&lt;/a&gt; &amp;#8211; Architecture overview for the new Linkedin referenced search.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mysqlperformanceblog.com/2010/01/21/when-should-you-store-serialized-objects-in-the-database/&quot;&gt;When to serialize objects in the database&lt;/a&gt; &amp;#8211; excellent article by the MySQL performance blog.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://friendlyorm.com/&quot;&gt;Friendly &amp;#8211; noSQL on MySQL&lt;/a&gt; &amp;#8211; 2 weeks ago or so, i was talking to &lt;a href=&quot;http://twitter.com/elado&quot;&gt;@elado&lt;/a&gt; about friendly, saying it feels weird and if i am going to use noSQL, i&amp;#8217;d probably go for MongoDB or Tokyo. After retrying Friendly i take it back, this is a really nice implementation.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.peepcode.com/tutorials/2010/live-coding-rails-3-upgrade&quot;&gt;Rails 3 upgrade peepcast&lt;/a&gt; &amp;#8211; free.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.citrusbyte.com/2009/12/15/superfluous-dsls/&quot;&gt;Superfluous &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt;&lt;/a&gt; &amp;#8211; Do validations belong in the instance scope?&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.digimonkey.com/2010/02/why-use-haml-and-sass-i-already-know-html/&quot;&gt;Why i use &lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt; and &lt;span class=&quot;caps&quot;&gt;SASS&lt;/span&gt;&lt;/a&gt; &amp;#8211; and Eric davis that &lt;a href=&quot;http://theadmin.org/articles/2010/02/04/why-i-dont-use-haml-or-sass/&quot;&gt;doesn&amp;#8217;t use &lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt; and &lt;span class=&quot;caps&quot;&gt;SASS&lt;/span&gt;&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/zen-coding/&quot;&gt;zen-coding&lt;/a&gt; &amp;#8211; some people&amp;#8217;s answer to the whole &amp;#8220;&lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;SASS&lt;/span&gt; is less typing&amp;#8221; argument.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.vimeo.com/9111883&quot;&gt;Music with Ruby&lt;/a&gt; &amp;#8211; 2 screencasts&lt;/li&gt;
	&lt;li&gt;and &lt;a href=&quot;http://groups.google.com/group/gnu.emacs.help/browse_thread/thread/47bc043c2257b9a2/f4f658199b65eeaf?pli=1&quot;&gt;a little bit of hate to us all&lt;/a&gt; &amp;#8211; Just for kicks :)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.masswerk.at/jsuix/&quot;&gt;js/uix&lt;/a&gt; &amp;#8211; Unix-like javascript OS toy.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/ryanb/importex&quot;&gt;importx&lt;/a&gt; &amp;#8211; Easily import excel files into your database.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jrallison/authlogic_oauth/&quot;&gt;authlogic-oauth&lt;/a&gt; &amp;#8211; enable your users to login with their Twitter credentials.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://spreadnotes.me/&quot;&gt;Speednotes&lt;/a&gt; &amp;#8211; sticky notes got cooler.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gemcutter.org/gems?letter=V&quot;&gt;The letter V on Gemcutter&lt;/a&gt; &amp;#8211; GemCutter is awesome and sometimes i wonder between the gems over there when i get bored, the letter V specifically is awesome because there are lots of &amp;#8220;validates_something&amp;#8221; gems there that people might find useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 1/2/2010</title>
   <link href="http://blog.eizesus.com/2010/02/bag-o-links-1-2-2010"/>
   <updated>2010-02-01T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/02/bag-o-links-1-2-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://tweetolinks.heroku.com&quot;&gt;TweetOLinks&lt;/a&gt; &amp;#8211; A simple app i throw on Heroku, syndicates your Twitter home (friends + RTs) timeline into an &lt;span class=&quot;caps&quot;&gt;RSS&lt;/span&gt; feed that contains only Tweets with links in them. I&amp;#8217;ve added options to exclude users, domains and tags, feedback is welcome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://books.couchdb.org/relax/&quot;&gt;Oreilly&amp;#8217;s CouchDB ebook&lt;/a&gt; &amp;#8211; now available online.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.seomoz.org/blog/the-evil-side-of-google-exploring-googles-user-data-collection&quot;&gt;Why Google is evil and knows all about you&lt;/a&gt; &amp;#8211; if you needed the full explanation and magnitude.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://magicscalingsprinkles.wordpress.com/2010/01/28/why-i-wrote-arel/&quot;&gt;Why &lt;span class=&quot;caps&quot;&gt;AREL&lt;/span&gt;?&lt;/a&gt; &amp;#8211; some notes from the author of &lt;span class=&quot;caps&quot;&gt;AREL&lt;/span&gt;, now included in Rails 3.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://madebymany.co.uk/tutorial-for-restful_authentication-on-rails-with-facebook-connect-in-15-minutes-00523&quot;&gt;RestfulAuthentication and Facebook connect in 15.minutes&lt;/a&gt; &amp;#8211; someone out there is still doing Facebook applications with rails, we should all help.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/162881&quot;&gt;FactoryGirl.attachment&lt;/a&gt; &amp;#8211; support file columns in FactoryGirl.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.nczonline.net/blog/2010/01/26/answering-baranovskiys-javascript-quiz/&quot;&gt;Answering Baranovskiy’s JavaScript quiz&lt;/a&gt; &amp;#8211; so you think you know javascript? you don&amp;#8217;t.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://askmonty.org/wiki/index.php/MariaDB_versus_MySQL&quot;&gt;MariaDB&lt;/a&gt; &amp;#8211; Yeah yeah, big bad oracle bought sun and now we don&amp;#8217;t have Mysql bla bla bla. For those of you that really believe that &lt;span class=&quot;caps&quot;&gt;ORA&lt;/span&gt; will do something as stupid as hurting the MySQL community, here&amp;#8217;s a MySQL spinoff by the original author himself.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://venturehacks.com/articles/fire-co-founders&quot;&gt;When to fire your co-founders&lt;/a&gt; &amp;#8211; Good read if you are planning to &amp;#8220;&lt;span class=&quot;caps&quot;&gt;OMG&lt;/span&gt; WE &lt;span class=&quot;caps&quot;&gt;ARE&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;GOING&lt;/span&gt; TO &lt;span class=&quot;caps&quot;&gt;CODE&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;THE&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;NEXT&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;FACEBOOK&lt;/span&gt;&amp;#8221; with your best friend.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://webtint.net/articles/a-crash-course-in-usability/&quot;&gt;Crash course in Usability&lt;/a&gt; &amp;#8211; design and layout tips for a better usability on your site.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://omgbloglol.com/post/364624593/rails-upgrade-is-now-an-official-plugin&quot;&gt;rails-upgrade is now an official plugin&lt;/a&gt; &amp;#8211; easy upgrade from rails2.x to rails 3 with this plugin.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/02/01/50-brilliant-css3-javascript-coding-techniques/&quot;&gt;Hardcore CSS3&lt;/a&gt; &amp;#8211; some amazing things with CSS3, now close your eyes and imagine a world without IE.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jilion.com/sublime/video&quot;&gt;Sublime &amp;#8211; HTML5 video&lt;/a&gt; &amp;#8211; not available yet, but will be soon.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://csswizardry.com/2010/01/iphone-css-tips-for-building-iphone-websites/&quot;&gt;iPhone &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; tips&lt;/a&gt; &amp;#8211; cool tips if you are going to build a mobile support for your&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://lindsaar.net/2010/1/31/validates_rails_3_awesome_is_true&quot;&gt;Rails 3 new validations &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt;&lt;/a&gt; &amp;#8211; good write up, a new syntax that i like for a change.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingbuzz.com/2010/01/25-ultimate-useful-form-tutorials-using-css-and-javascript/&quot;&gt;Ultimate &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt;/&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;/JS forms&lt;/a&gt; &amp;#8211; pretty forms, no tables.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://metaskills.net/2010/1/29/unobtrusive-js-in-rails-3-with-prototype&quot;&gt;Unobtrusive Javascript in Rails3 &amp;#8211; prototype&lt;/a&gt; &amp;#8211; an example of the new Rails 3 &lt;span class=&quot;caps&quot;&gt;UJS&lt;/span&gt; feature.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.ultrasaurus.com/sarahblog/2010/01/rails-security-review-checklist/&quot;&gt;Rails application security checklist&lt;/a&gt; &amp;#8211; Sarah Allen points on some important issues and markers when checking the security status of a Rails application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jnicklas/capybara&quot;&gt;capybara&lt;/a&gt; &amp;#8211; webrat alternative which aims to support all browser simulators.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://cartographer.visualmotive.com/&quot;&gt;cartographer&lt;/a&gt; &amp;#8211; Thematic mapping library for Google Maps.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mutle/rack-uploads&quot;&gt;rack-uploads&lt;/a&gt; &amp;#8211; Rack Upload handler with Nginx Upload Module support.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/ddollar/shoebox&quot;&gt;shoebox&lt;/a&gt; &amp;#8211; Manage styles and scripts on a controller level.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/foca/undress/&quot;&gt;undress&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; to textile, Markdown and more.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/sblackstone/auto_sprite&quot;&gt;auto_sprite&lt;/a&gt; &amp;#8211; easy sprite management for Rails applications.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jeffp/wizardly&quot;&gt;wizardly&lt;/a&gt; &amp;#8211; wizard manager for Rails, looks nicer than the rest.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.jstorimer.com/ruby/2010/01/30/delayed-paperclip.html&quot;&gt;delayed_paperclip&lt;/a&gt; &amp;#8211; Process paperclip attachments with DJ in a single gem.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Find all online users with Authlogic</title>
   <link href="http://blog.eizesus.com/2010/01/find-all-online-users-with-authlogic-29-1-2010"/>
   <updated>2010-01-29T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/01/find-all-online-users-with-authlogic-29-1-2010</id>
   <content type="html">&lt;p&gt;Assuming you want to find all the users that are currently online when you use Authlogic, you might find it&amp;#8217;s a little tricky at first since you can&amp;#8217;t really access the sessions table from &lt;code&gt;UserSession&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Depending on your SessionStore configuration, you can theoretically access the storage directly (the Sessions table, or memcached for example), but assuming you don&amp;#8217;t want to add some unnecessary code or models to your app, you can simply use one of Authlogic&amp;#8217;s &lt;strong&gt;Magic columns&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Hard way&lt;/h4&gt;
&lt;p&gt;Authlogic gives you all kind of &lt;em&gt;automatic&lt;/em&gt; columns that you don&amp;#8217;t really need to update or maintain on your own, they are maintained by the actual code flow of Authlogic itself.&lt;br /&gt;
Those fields can contain some basic functionality related issues like the number of login attempts made, the ip address from which the attempt was made an or even what was the ip address &lt;em&gt;the last time&lt;/em&gt; that user logged in. fun.&lt;/p&gt;
&lt;p&gt;The magic column that will help us find who is &lt;strong&gt;probably&lt;/strong&gt; online is the one called &lt;code&gt;last_request_on&lt;/code&gt;, which basically indicates when was the last time that user made a request to your application.&lt;/p&gt;
&lt;p&gt;The second parameter we&amp;#8217;ll need in order to make a more accurate selection, is the configuration option named &lt;code&gt;logged_in_timeout&lt;/code&gt;, which sets the timeout after which a stale session will be expired, by default it will expire after 10 minutes.&lt;/p&gt;
&lt;p&gt;so if you set your session expiry to 30 minutes:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/290369.js?file=user.rb&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;searching for those users is pretty easy:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/290369.js?file=online_users.rb&quot;&gt;&lt;/script&gt;&lt;br /&gt;
(note that this one counts, you can do whatever you want)&lt;/p&gt;
&lt;h4&gt;Easy way&lt;/h4&gt;
&lt;p&gt;As &lt;strong&gt;Frederic&lt;/strong&gt; mentioned in the first comment for this post, Authlogic gives us an easier way to access the logged in users by giving us a few &lt;em&gt;scopes&lt;/em&gt; we can use such as &lt;strong&gt;logged_in&lt;/strong&gt; and &lt;strong&gt;logged_on&lt;/strong&gt; (&lt;em&gt;Authlogic::ActsAsAuthentic::LoggedInStatus&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;So, in order to get all the online users we can simply:&lt;br /&gt;
&lt;script src=&quot;http://gist.github.com/290537.js?file=online_users.rb&quot;&gt;&lt;/script&gt;&lt;br /&gt;
which is way easier, thanks &lt;strong&gt;Frederic&lt;/strong&gt;.&lt;/p&gt;</content>
 </entry>
 
 
</feed>