<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Emphasized Insanity</title>
 <link href="http://blog.eizesus.com/feed/atom.xml" rel="self"/>
 <link href="http://blog.eizesus.com/"/>
 <updated>2010-04-22T14:29:16-04:00</updated>
 <id>http://blog.eizesus.com/</id>
 <author>
   <name>Elad Meidar</name>
   <email>elad@eizesus.com</email>
 </author>
 
 
 <entry>
   <title>Bag O' Links - 22/4/2010</title>
   <link href="http://blog.eizesus.com/2010/04/bag-o-links-22-4-2010"/>
   <updated>2010-04-22T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/04/bag-o-links-22-4-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/679946/api-for-direct-deposit-ach-eft-whatever&quot;&gt;&lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; for direct deposits&lt;/a&gt; &amp;#8211; a discussion on StackOverflow about the ways to pay users back, when your application requires something like that. i&amp;#8217;d add PayPal&amp;#8217;s MassPayment option if you can handle the fees.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://grease-your-suite.heroku.com/&quot;&gt;Grease your suit&lt;/a&gt; &amp;#8211; some excellent tips on how to ninja-tweak your testing stack in Rails.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.compulsivoco.com/2009/05/rails-api-authentication-using-restful-authentication/&quot;&gt;Easy &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; Key authentication with Restful Authentication&lt;/a&gt; &amp;#8211; as a recent Authlogic dropout, i am happy with RA. This article is yet another example on how easy it is to integrate an extension to RA when this time it&amp;#8217;s an &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; Key authentication feature.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.scottbellware.com/2010/04/ironruby-drops-does-it-make-sound.html&quot;&gt;IronRuby drops &amp;#8211; does it make a sound&lt;/a&gt; &amp;#8211; a view over the .Net community approach and ruby, interesting read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://apirocks.com/html5/html5.html&quot;&gt;HTML5 Overview &amp;#8211; Slides&lt;/a&gt; &amp;#8211; in HTML5/CSS3.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/intl/sv-SE/web/ajaxcrawling/docs/getting-started.html&quot;&gt;Making RIAs crawlable&lt;/a&gt; &amp;#8211; by Google. i don&amp;#8217;t like it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ayende.com/Blog/archive/2010/04/21/that-no-sql-thing-modeling-documents-in-a-document-database.aspx&quot;&gt;Modeling Documents in a DocumentStore Database&lt;/a&gt; &amp;#8211; some ideas on how to model your data, twisting the idea behind documents a little bit. not sure i agree.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://daniel.wertheim.se/2010/04/12/simple-mongodb-part-1-getting-started/&quot;&gt;Getting started with MongoDB&lt;/a&gt; &amp;#8211; A new post series, interesting to see into to what it will develop.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://davidwalsh.name/mootools-jquery-dojo&quot;&gt;Quick simple examples to common JS tasks&lt;/a&gt; &amp;#8211; in Mootools, Dojo and jQuery.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://cookbook.mongodb.org/&quot;&gt;MongoDB cookbook&lt;/a&gt; &amp;#8211; some useful recipes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://broadcast.oreilly.com/2010/04/mongodb-experts-model-the-move.html&quot;&gt;Moving from a relational DB to MongoDB&lt;/a&gt; &amp;#8211; good tips.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://developers.facebook.com/docs/reference/api/&quot;&gt;Facebook new &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/a&gt; &amp;#8211; Now with OAuth support and &amp;#8220;&lt;span class=&quot;caps&quot;&gt;OMGLOL&lt;/span&gt; WEB3.0&amp;#8221;.. &lt;strong&gt;sigh&lt;/strong&gt;, maybe it will suck less now.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.phpied.com/preload-cssjavascript-without-execution/&quot;&gt;preloading Javascript and &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; without execution&lt;/a&gt; &amp;#8211; neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://samdanielson.com/2007/3/19/proc-new-vs-lambda-in-ruby&quot;&gt;lambda VS. Proc.new&lt;/a&gt; &amp;#8211; simple example.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://acrisdesign.com/2010/04/animated-landscape-using-css-and-jquery/&quot;&gt;Animated landscape with jQuery&lt;/a&gt; &amp;#8211; that&amp;#8217;s nice, could be awesome if the weather would match some kind of an &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; to the current one.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://carsonified.com/blog/design/4-ways-to-create-web-based-data-visualisations/&quot;&gt;Creating web based visualizations&lt;/a&gt; &amp;#8211; 4 ways and examples.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://intridea.com/2010/4/20/rack-middleware-and-applications-whats-the-difference&quot;&gt;Rack Apps vs. Rack Middlewares&lt;/a&gt; &amp;#8211; maybe one day i&amp;#8217;ll care.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/04/20/seven-javascript-things-i-wish-i-knew-much-earlier-in-my-career/&quot;&gt;Javascript tips i wish i knew before&lt;/a&gt; &amp;#8211; nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://sickdesigner.com/index.php/2010/html-css/the-definitive-guide-to-formatting-css/&quot;&gt;Formatting &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; &amp;#8211; The definitive guide&lt;/a&gt; &amp;#8211; excellent read.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://api.rubyonrails.org/classes/ActiveSupport/SecureRandom.html&quot;&gt;ActiveSupport::SecureRandom&lt;/a&gt; &amp;#8211; not many people are familiar with this AS tool, a useful code generator.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/napcs/programming_for_kids&quot;&gt;Programming for Kids&lt;/a&gt; &amp;#8211; A community book like those old &lt;span class=&quot;caps&quot;&gt;BASIC&lt;/span&gt; books where kids typed in source code to play a game. Fork and write!.&lt;a href=&quot;http://napcs.com/files/programmingforkids/&quot;&gt;book&lt;/a&gt; is here&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.kesiev.com/akihabara/&quot;&gt;akihabara&lt;/a&gt; &amp;#8211; HTML5 Arcade games engine. this. is. fun.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://intridea.com/2010/4/22/oauth2-gem-just-in-time-for-facebook-graph&quot;&gt;OAuth2 gem&lt;/a&gt; &amp;#8211; is out, with the new Facebook &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; example.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/unboxed/iCuke&quot;&gt;iCuke&lt;/a&gt; &amp;#8211; Cucumber support for iPhone development.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.googlesharing.net/index.html&quot;&gt;GoogleSharing&lt;/a&gt; &amp;#8211; pulling the &amp;#8220;kansas city shuffle&amp;#8221; on Google.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/jsplumb/&quot;&gt;jsPlumb&lt;/a&gt; &amp;#8211; visually connect between &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; elements. wicked.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/require_gist&quot;&gt;require_gist&lt;/a&gt; &amp;#8211; require a Github Gist. lolz.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://houseofbuttons.tumblr.com/&quot;&gt;House of Buttons&lt;/a&gt; &amp;#8211; a collection of awesome UI buttons.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 13/4/2010</title>
   <link href="http://blog.eizesus.com/2010/04/bag-o-links-13-4-2010"/>
   <updated>2010-04-13T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/04/bag-o-links-13-4-2010</id>
   <content type="html">&lt;h4&gt;i&amp;#8217;ve got 909 tickets but a rant ain&amp;#8217;t one.&lt;/h4&gt;
&lt;p&gt;Rails. you know it right?&lt;/p&gt;
&lt;p&gt;yeah, sure you do, if you are using this blog most odds are that you are using rails or at least interested in it a little bit.&lt;br /&gt;
In my opinion our lovely Rails is a little bit sick, it has too many stale/open tickets/patches that somehow managed to skip the radar in the entire Rails 3 luau.&lt;/p&gt;
&lt;p&gt;Well, uncle Rails needs you!&lt;/p&gt;
&lt;p&gt;I am not going to re-write or repeat what my friends &lt;a href=&quot;http://ryanbigg.com/2010/04/want-it-give/&quot;&gt;Ryan Bigg&lt;/a&gt;, &lt;a href=&quot;http://www.enlightsolutions.com/articles/pledge-3-percent-for-rails-3/&quot;&gt;Dan Pickett&lt;/a&gt; and &lt;a href=&quot;http://kside.net/2010/04/12/contributing-to-rails&quot;&gt;Kristopher Murata&lt;/a&gt; wrote, but i&amp;#8217;ll just say this.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;find some free time and help make Rails a little better.&lt;/li&gt;
	&lt;li&gt;yes, even you, the person that started working with Rails 3 days ago can help, ask us how.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am not hiding the fact that i am deeply disappointed with the way some of the decisions were made within the Rails 3 marathon, but that doesn&amp;#8217;t mean that i am going to give up that easily and you too, the person who is frustrated with Rails 3 bugs, compatibility issues and black holes can join in and try to help us bring it back to the way we all like it.&lt;/p&gt;
&lt;p&gt;now, for the fun stuff.&lt;/p&gt;
&lt;h4&gt;Links&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://carsonified.com/blog/design/everything-you-know-about-clearfix-is-wrong/&quot;&gt;Everything you know about .clearfix is wrong!&lt;/a&gt; &amp;#8211; yeah, it was wrong. ;)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.noupe.com/javascript/jquery-html-table-toolbox.html&quot;&gt;jQuery Table toolbox&lt;/a&gt; &amp;#8211; yeah i know, jQuery is retarded but it does have a monstrous amount plugins, and sometimes that&amp;#8217;s all i need.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nosql.mypopescu.com/post/517791994/presentation-gary-dusbabek-rackspace-on-cassandra&quot;&gt;Presentation: Gary Dusbabek from Rackspace on Cassandra&lt;/a&gt; &amp;#8211; good presentation.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.devlounge.net/code/horizontal-rules-and-how-to-style-them&quot;&gt;Styling horizontal rulers&lt;/a&gt; &amp;#8211; now you can.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rackerhacker.com/2010/04/12/best-practices-iptables/&quot;&gt;Best Practices: IpTables&lt;/a&gt; &amp;#8211; Awesome tips from RackerHacker.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mightymeta.co.uk/introducing-the-web-safe-font-cheat-sheet/&quot;&gt;Web safe fonts cheatsheet&lt;/a&gt; &amp;#8211; sIFR, Phark, Cufon.. all under the microscope.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://openmonkey.com/articles/2010/04/javascript-testing-with-cucumber-capybara&quot;&gt;Javascript testing with Cucumber and Capybara&lt;/a&gt; &amp;#8211; client side testing with Rails, wicked awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://railsfreak.com/post/512118574/ensure-with-no-rescue&quot;&gt;ensure with no rescue&lt;/a&gt; &amp;#8211; ensure some code runs no matter what happens. with that being said keep in mind that using exceptions for expected failures is stupid.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://neeraj.name/2010/04/11/singleton-function-in-javascript.html&quot;&gt;Javascript singletone&lt;/a&gt; &amp;#8211; wicked.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nakedstartup.com/2010/04/the-way-we-work-week-1-at-gameplan/&quot;&gt;Gameplan&amp;#8217;s workflow&lt;/a&gt; &amp;#8211; git, github and testing workflow.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://devver.net/blog/2010/04/speeding-up-multi-browser-selenium-testing-using-concurrenc/&quot;&gt;Supercharged browser testing&lt;/a&gt; &amp;#8211; wicked. capybara, multiple browsers and whole&amp;#8217;lotta&amp;#8217;fun.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/JamesEdwardGrayII/presentations&quot;&gt;Awesome Rails slides&lt;/a&gt; &amp;#8211; from mr. James Edward Grayll.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.codyfauser.com/2008/7/4/rails-http-status-code-to-symbol-mapping&quot;&gt;Rails &lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt; codes and symbols&lt;/a&gt; &amp;#8211; nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://perfectionkills.com/whats-wrong-with-extending-the-dom/&quot;&gt;Why extending the &lt;span class=&quot;caps&quot;&gt;DOM&lt;/span&gt; is a bad idea&lt;/a&gt; &amp;#8211; there you go jQuery&amp;#8230;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.patricktulskie.com/2010/04/skip-rails-authenticitytoken-check-sometimes/&quot;&gt;Skip a Rails filter based on a custom condition&lt;/a&gt; &amp;#8211; Patrick Tulskie gains +10 intelligence points for helping me out on this one, but sure as hell we do need an &lt;code&gt;:if&lt;/code&gt; option on &lt;code&gt;skip_before_filter&lt;/code&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.railsdispatch.com/&quot;&gt;Rails Dispatch&lt;/a&gt; &amp;#8211; Rails 3, Yehuda, screencasts, whatever. like that&amp;#8217;s what matters.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.bennadel.com/coldfusion/privacy-policy-generator.htm&quot;&gt;Quickly generate a custom privacy and &lt;span class=&quot;caps&quot;&gt;TOS&lt;/span&gt;&lt;/a&gt; &amp;#8211; neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.josephwilk.net/ruby/cucumber-tags-and-continuous-integration-oh-my.html&quot;&gt;Cucumbers, Tags and continuous integration&lt;/a&gt; &amp;#8211; treat features that &lt;strong&gt;are still under development&lt;/strong&gt; with care.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.ironshay.com/post/A-Mini-Review-Benchmark-of-Rubye28099s-Different-Testing-Frameworks.aspx&quot; title=&quot;on IronRuby&quot;&gt;Comparing testing frameworks&lt;/a&gt; &amp;#8211; Shay loves IronRuby and wraps a nice review that even non IronRuby users can gain something from. (yes, &lt;code&gt;require &quot;something.dll&quot;&lt;/code&gt; makes me flinch too, for now).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.456bereastreet.com/archive/201004/html5_input_types/&quot;&gt;HTML5 Input types&lt;/a&gt; &amp;#8211; don&amp;#8217;t bother i guess, they will change, disappear, reappear, and misinterpreted in IE.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://agentzh.org/misc/slides/nginx-conf-scripting/nginx-conf-scripting.html#1&quot;&gt;Introduction to Nginx&lt;/a&gt; &amp;#8211; nice tips (it&amp;#8217;s a slide, click space to get the next one.)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://autopragmatic.com/2008/01/26/hosting-a-git-repository-on-dreamhost/&quot;&gt;Host a git repository on Dreamhost&lt;/a&gt; &amp;#8211; tutorial.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.keithclark.co.uk/labs/ie-css3/&quot;&gt;CSS3 emulator for IE&lt;/a&gt; &amp;#8211; screw that browser.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mbleigh/persistence-smoothie&quot;&gt;Blending &lt;span class=&quot;caps&quot;&gt;SQL&lt;/span&gt; in noSQL&lt;/a&gt; &amp;#8211; slides and source code from MBleigh&amp;#8217;s talk.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nosql-database.org/&quot;&gt;noSQL database&lt;/a&gt; &amp;#8211; the ugliest website they could have made for that cause, lots of info on the other hand.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tammersaleh.com/posts/managing-heroku-environment-variables-for-local-development&quot;&gt;Managing Heroku env variables for local development&lt;/a&gt; &amp;#8211; mock heroku&amp;#8217;s &lt;span class=&quot;caps&quot;&gt;ENV&lt;/span&gt; vars.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/curtis/honeypot-captcha&quot;&gt;HoneyPot-Captcha&lt;/a&gt; &amp;#8211; Honeypot captchas work off the premise that you can present different form fields to a spam bot than you do to a real user. Spam bots will typically try to fill all fields in a form and will not take into account &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; styles.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.jstorage.info/&quot;&gt;jStorage&lt;/a&gt; &amp;#8211; a simple wrapper plugin for Prototype, MooTools and jQuery to store data on browser side.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/delano/storable/&quot;&gt;Storable&lt;/a&gt; &amp;#8211; Marshal Ruby classes into and out of multiple formats (yaml, json, csv, tsv). &lt;a href=&quot;http://solutious.com/projects/&quot;&gt;Solutious&lt;/a&gt; actually have a bunch of other interesting tools.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://instantblueprint.com/&quot;&gt;Instant Blueprint&lt;/a&gt; &amp;#8211; quickly generate &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt;, &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; and even a JS lib of your choice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/holland-backup/holland&quot;&gt;Holland backup framework&lt;/a&gt; &amp;#8211; another great release from Rackspace, this time it&amp;#8217;s an Open Source backup framework.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/rhburrows/reviewr&quot;&gt;reviewr&lt;/a&gt; &amp;#8211; send code review requests using git. minions, prepare yourselves.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://barkingiguana.com/2010/04/12/an-updated-command-prompt&quot;&gt;Updated pimped command line&lt;/a&gt; &amp;#8211; barking iguana is one of my favorites.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;- pretty awesome, a &amp;#8220;conditional&amp;#8221; &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;/JS solution for HTML5/CSS3 support in browsers. wicked.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/dansimpson/em-websocket-server/tree/master/examples/&quot; title=&quot;eventmachine&quot;&gt;Websockets with Ruby&lt;/a&gt; &amp;#8211; examples.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/gimite/web-socket-js&quot;&gt;&amp;#8230;and WebSockets for inferior browsers&lt;/a&gt; &amp;#8211; guess which ones.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/apotonick/apotomo&quot;&gt;Apotomo&lt;/a&gt; &amp;#8211; build rails applications using widgets/&amp;#8220;cells&amp;#8221;. looks interesting.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/meh/failirc&quot;&gt;FailIRC&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;IRC&lt;/span&gt; server and client.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/soveran/ohm&quot;&gt;&lt;span class=&quot;caps&quot;&gt;OHM&lt;/span&gt;&lt;/a&gt; &amp;#8211; Object-Hash-Mapping. store objects in Redis.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/seejohnrun/ice_cube&quot;&gt;ice_cube&lt;/a&gt; &amp;#8211; Recurring dates &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt;. that&amp;#8217;s&amp;#8230; nice.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 4/4/2010</title>
   <link href="http://blog.eizesus.com/2010/04/bag-o-links-4-4-2010"/>
   <updated>2010-04-04T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/04/bag-o-links-4-4-2010</id>
   <content type="html">&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://bjeanes.com/2010/02/10/automatically-open-the-last-page-for-failed-scenarios&quot;&gt;Automatically open last page for failed cucumber scenarios&lt;/a&gt; &amp;#8211; shows what webrat sees when a scenario fails.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://cwe.mitre.org/top25/&quot;&gt;25 most dangerous programming errors&lt;/a&gt; &amp;#8211; some good tips and pointers.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technology/products/berkeley-db/sql.html&quot;&gt;Oracle uses SQLite to wrap Berkeley DB&lt;/a&gt; &amp;#8211; a good sign?&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.huangzhimin.com/entries/190-css-sprite-best-practices&quot;&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; Sprites best practices&lt;/a&gt; &amp;#8211; using sprites the way interwebs gods intended.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.nolanconsul.com/articles/facebooker-tutorial/&quot;&gt;Facebooker tutorial&lt;/a&gt; &amp;#8211; every time one of those comes out, an angle is burned to death.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.webdeveloperjuice.com/2010/04/04/18ish-signup-forms-to-beautify-your-web-app/&quot;&gt;18 signup forms&lt;/a&gt; &amp;#8211; cool ideas.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.skorks.com/2010/04/ruby-access-control-are-private-and-protected-methods-only-a-guideline/&quot;&gt;Ruby access control &amp;#8211; only a guideline?&lt;/a&gt; &amp;#8211; a view on ruby&amp;#8217;s &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; scopes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jamesgolick.com/2010/3/30/what-does-scalable-database-mean.html&quot;&gt;What does &amp;#8216;scaleable database&amp;#8217; mean?&lt;/a&gt; &amp;#8211; James Golick with another view on recent hype.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://lindsaar.net/2010/3/31/bundle_me_some_sanity&quot;&gt;Bundle me some sanity&lt;/a&gt; &amp;#8211; instead of ranting, this guy suggests a way to make bundler and &lt;span class=&quot;caps&quot;&gt;RVM&lt;/span&gt; play nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vinsol.com/blog/2010/04/01/ssl-checklist-for-rails-applications/&quot;&gt;Rails applications &lt;span class=&quot;caps&quot;&gt;SSL&lt;/span&gt; checklist&lt;/a&gt; &amp;#8211; what you need in order to setup &lt;span class=&quot;caps&quot;&gt;SSL&lt;/span&gt; for your application.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dev.opera.com/articles/view/css-generated-content-techniques/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; generated content techniques&lt;/a&gt; &amp;#8211; the &lt;code&gt;content&lt;/code&gt; attribute exposed.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.scalr.net/&quot;&gt;Scalr&lt;/a&gt; &amp;#8211; self-scaling hosting environment with amazon EC-2.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mikeperham.com/2010/04/03/introducing-phat-an-asynchronous-rails-app/&quot;&gt;Phat &amp;#8211; ASync rails application&lt;/a&gt; &amp;#8211; rails application + fibers + EventMachine.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://netcetera.org/cgi-bin/tmbundles.cgi&quot;&gt;TextMate bundles&lt;/a&gt; &amp;#8211; lots of bundles.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://simplegeo.com/&quot;&gt;SimpleGeo&lt;/a&gt; &amp;#8211; Geodata &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; service, looks neat.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/ratnikov/lolcalhost&quot;&gt;lolcalhost&lt;/a&gt; &amp;#8211; a hacky little command line emulator.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.rgraph.net/&quot;&gt;RGraph&lt;/a&gt; &amp;#8211; neat HTML5 graph library.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://thechangelog.com/post/494458410/xkcdfools-mock-a-unix-terminal-in-jquery&quot;&gt;xkcdfools: mock a &lt;span class=&quot;caps&quot;&gt;UNIX&lt;/span&gt; terminal in jQuery&lt;/a&gt; &amp;#8211; i actually intended something like that to be the next theme for this blog, i guess &lt;span class=&quot;caps&quot;&gt;XKCD&lt;/span&gt; are quicker than me.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/michaeldv/awesome_print&quot;&gt;AwesomePrint&lt;/a&gt; &amp;#8211; Pretty print your Ruby objects with style and in full color and proper indentation. in other words, death to &lt;code&gt;y something&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.limonade-php.net/README.htm&quot;&gt;Limondae&lt;/a&gt; &amp;#8211; sinatra for &lt;span class=&quot;caps&quot;&gt;PHP&lt;/span&gt; infidels.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/denied/denied&quot;&gt;Denied&lt;/a&gt; &amp;#8211; sinatra for python infidels.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/icco/Resume&quot;&gt;Resume&lt;/a&gt; &amp;#8211; a little sinatra application to run your resume wild.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>CannedCukes - Share your features!</title>
   <link href="http://blog.eizesus.com/2010/04/canned-cukes-share-your-features-2-4-2010"/>
   <updated>2010-04-02T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/04/canned-cukes-share-your-features-2-4-2010</id>
   <content type="html">&lt;p&gt;In the past few weeks i had the pleasure of working on some projects from the kind that i like to call &amp;#8220;&lt;span class=&quot;caps&quot;&gt;OMFG&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;WHO&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;DID&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;THIS&lt;/span&gt;!?&amp;#8221; projects, also knows as Rescue projects.&lt;/p&gt;
&lt;p&gt;We usually take the head-first dive into the testing pool when we first encounter such horror, but when we came to do it pretty often we kind of created a &amp;#8220;Feature wiki&amp;#8221;: a preset list of cucumber&amp;#8217;s &lt;code&gt;.feature&lt;/code&gt; files that can be moved and shared between applications.&lt;/p&gt;
&lt;p&gt;We didn&amp;#8217;t keep the &lt;code&gt;*_step&lt;/code&gt; files because the actual implementation varies between applications but the main concept, the feature, stays as is.&lt;/p&gt;
&lt;p&gt;So then, i created &lt;a href=&quot;http://cannedcukes.heroku.com&quot;&gt;CannedCukes&lt;/a&gt;, a horribly-graphically-designed application that allows users to share their features and scenarios with others, and by that improving overall community testing_fu skills.&lt;/p&gt;
&lt;p&gt;i hope so, at least :)&lt;/p&gt;
&lt;p&gt;For now you can only add your own features and scenarios, search other scenarios and download them as text.&lt;/p&gt;
&lt;p&gt;later me or the army of collaborators the will rise will code:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;A gem that will ease feature submission directly to the application from a project root.&lt;/li&gt;
	&lt;li&gt;a way to &lt;strong&gt;fork&lt;/strong&gt; someone else&amp;#8217;s scenario and add it to one of your own features.&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;caps&quot;&gt;BETTER&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;DESIGN&lt;/span&gt; OH &lt;span class=&quot;caps&quot;&gt;GOD&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;PLEASE&lt;/span&gt;. i am really bad with colors. :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to join me, just &lt;a href=&quot;http://github.com/eladmeidar/CannedCukes&quot;&gt;fork&lt;/a&gt; away and pull request (yes yes, it&amp;#8217;s on github :) ).&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 26/3/2010</title>
   <link href="http://blog.eizesus.com/2010/03/bag-o-links-26-3-2010"/>
   <updated>2010-03-26T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/03/bag-o-links-26-3-2010</id>
   <content type="html">&lt;h4&gt;Links&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.amirharel.com/2010/03/22/javascript-inheritance/&quot;&gt;Another take on Javascript inheritance&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://twitter.com/amir_harel&quot;&gt;@amir_harel&lt;/a&gt; suggests this neat trick to imply inheritance in javascript.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pragprog.com/titles/btlang/seven-languages-in-seven-weeks&quot;&gt;Seven languages in Seven weeks&lt;/a&gt; &amp;#8211; seems like a really neat book from PragProg.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jimneath.org/2010/03/25/how-to-speed-up-textmate-in-large-projects/&quot;&gt;Speeding up TextMate in large projects&lt;/a&gt; &amp;#8211; great tips.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pivotallabs.com/users/chad/blog/articles/1208-automating-bundler-in-your-deploy&quot;&gt;Automating Bundler in deployments&lt;/a&gt; &amp;#8211; from pivotal.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://yz.mit.edu/wp/2009/12/17/web-sockets-tutorial-with-simple-python-server/&quot;&gt;WebSockets tutorial&lt;/a&gt; &amp;#8211; yeah, it&amp;#8217;s with python but there&amp;#8217;s a good Ruby example other there using &amp;#8220;Cramp&amp;#8221;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://designbeep.com/2010/03/25/31-css-navigation-and-menu-tutorials-you-should-practice/&quot;&gt;Navigation and menus roundup&lt;/a&gt; &amp;#8211; i admit, navigation, menus and footers are my web-fetish.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/03/24/a-short-guide-to-open-source-and-similar-licenses/&quot;&gt;Open source license types explained&lt;/a&gt; &amp;#8211; in simple plain english.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.findmebyip.com/litmus/&quot;&gt;Awesome browser support tables&lt;/a&gt; &amp;#8211; HTML5 and CSS3.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/3/23/digg-4000-performance-increase-by-sorting-in-php-rather-than.html&quot;&gt;Digg improves performance by 4000%%&lt;/a&gt; &amp;#8211; by offloading calculations from DB engine to code. in contrary actually to what i thought is the right thing to do. oh well, me learz. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blogs.digitar.com/jjww/2009/01/rabbits-and-warrens/&quot;&gt;RabbitMQ overview&lt;/a&gt; &amp;#8211; a very good writeup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://phunkwork.com/post/460924983/hunting-bugs-thru-history&quot;&gt;Hunting bugs in History&lt;/a&gt; &amp;#8211; some &lt;code&gt;git-bisect&lt;/code&gt; magic.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jamesgolick.com/2010/3/14/crazy-heretical-and-awesome-the-way-i-write-rails-apps.html&quot;&gt;This is how i write Rails applications&lt;/a&gt; &amp;#8211; James shades some light on this technique in a really interesting read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.josh-nesbitt.net/2009/09/08/implementing-a-simple-lockfile-system-in-ruby/&quot;&gt;Implementing LockFile with Ruby&lt;/a&gt; &amp;#8211; really useful if for some reason you need to implement a Mutex on your own.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://javascript.crockford.com/code.html&quot;&gt;Javascript coding conventions&lt;/a&gt; &amp;#8211; a collection of code convention suggestions for Javascript.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://thelincolnshirepoacher.com/pages/databases-are-for-pussies&quot;&gt;Databases are for pussies&lt;/a&gt; &amp;#8211; a vulgar name for a great article, also introduces &lt;a href=&quot;http://github.com/chrislloyd/tyrone&quot;&gt;tyrone&lt;/a&gt;, a rapid prototyping Sinatra based solution.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://developer.yahoo.com/hadoop/tutorial/index.html&quot;&gt;Yahoo!&amp;#8217;s Hadoop tutorial&lt;/a&gt; &amp;#8211; wuhoo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.envylabs.com/2010/03/blue-light-special/&quot;&gt;BlueLight&lt;/a&gt; &amp;#8211; an extension to Clearance that includes roles and some administration roots.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://kingapi.com/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; King&lt;/a&gt; &amp;#8211; an &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; providers aggregator.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://getcloudcache.com/&quot;&gt;CloudCache&lt;/a&gt; &amp;#8211; offers simple and affordable on-demand caching.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://impel.simulacre.org/api&quot;&gt;Impl&lt;/a&gt; &amp;#8211; Javascript &lt;span class=&quot;caps&quot;&gt;ORM&lt;/span&gt; (requires HTML5).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/jot/notifo&quot;&gt;Notifo&lt;/a&gt; &amp;#8211; a Ruby wrapper for Notifo, allows sending push messages to mobile users.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/wycats/artifice&quot;&gt;Artifice&lt;/a&gt; &amp;#8211; A few weeks ago i made a gem that used sinatra to mock a webservice, &lt;code&gt;wycats&lt;/code&gt; wins with this one.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2010/03/24/mootouch/&quot;&gt;MooTouch&lt;/a&gt; &amp;#8211; the MooTools clone of jQTouch.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 21/3/2010</title>
   <link href="http://blog.eizesus.com/2010/03/bag-o-links-21-3-2010"/>
   <updated>2010-03-21T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/03/bag-o-links-21-3-2010</id>
   <content type="html">&lt;h4&gt;Rails developers needed in Israel.&lt;/h4&gt;
&lt;p&gt;In a few weeks from now, &lt;a href=&quot;http://www.nautilus6.com&quot;&gt;Nautilus6&lt;/a&gt; is going to get a new shiny branch in Israel. This obviously means, that we need some new kick-ass Ruby on Rails developers to fill our new team.&lt;br /&gt;
We are basically looking for people that love web, love to make cool applications and are not afraid from taking up challenges every once in a while. We offer a full-time position in various aspects of web development (Yeah you javascript ninjas and designers are welcome too) and we don&amp;#8217;t even force you to come and work in an office so if you want to stay home, that&amp;#8217;s fine.&lt;/p&gt;
&lt;p&gt;I am aware that there is a currently low Ruby on Rails developer count in Israel, therefore we do offer some training plans for those who currently work using other frameworks and development stacks and introduce them to eternal happiness and joy.&lt;/p&gt;
&lt;p&gt;General requirements are pretty much standard:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Having prior experience with Ruby on Rails is a &lt;span class=&quot;caps&quot;&gt;HUGE&lt;/span&gt; plus.&lt;/li&gt;
	&lt;li&gt;Knowing your way around &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; (2, 3 is cool too), Standard &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; and Client side libraries (Preferably Mootools).&lt;/li&gt;
	&lt;li&gt;Database and general data layer solutions (noSQL).&lt;/li&gt;
	&lt;li&gt;Advanced knowledge in professional aspects of web development such as Scaling and optimizations of existing application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Currently we are working on several internal developments and on world wide client applications, it&amp;#8217;s never boring basically.&lt;/p&gt;
&lt;p&gt;Now, on to the interesting stuff :)&lt;/p&gt;
&lt;h4&gt;Links&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/03/12/45-fresh-useful-javascript-and-jquery-techniques-and-tools/&quot;&gt;A collection of Javascript Techniques&lt;/a&gt; &amp;#8211; possibly just another roundup, but it&amp;#8217;s here if i&amp;#8217;ll ever need it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.napcsweb.com/blog/2010/03/15/making-as-strin-alternate-attribute-readers/&quot;&gt;Making &amp;#8216;as_string&amp;#8217; alternate attribute getters&lt;/a&gt; &amp;#8211; Brian Hogan suggest a neat little trick to spice up your code.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.curtismchale.ca/ruby-on-rails/why-rails-feels-like-a-developers-only-playground/&quot;&gt;Why Rails feels like a developer&amp;#8217;s only playground&lt;/a&gt; &amp;#8211; a Designer&amp;#8217;s rant.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.rubybestpractices.com/posts/gregory/022-rbp-now-open.html&quot;&gt;Ruby Best Practices is now free&lt;/a&gt; &amp;#8211; free e-book, right here.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://webroar.in/&quot;&gt;WebRoar&lt;/a&gt; &amp;#8211; claims to be the fastest Ruby application server, haven&amp;#8217;t tried and would appreciate notes.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.engineyard.com/blog/2010/architecture-wins-varnish-and-more/&quot;&gt;Ruby scales if you do it right&lt;/a&gt; &amp;#8211; So stop blaming the floor if you are a bad dancer.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rails.co.za/2009/11/14/monitoring-delayed-job-with-bluepill.html&quot;&gt;Monitoring DelayedJob with BluePill&lt;/a&gt; &amp;#8211; yes, bluepill is awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tech.bluesmoon.info/2009/09/scaling-writes-in-mysql.html&quot;&gt;Scaling MySQL writes&lt;/a&gt; &amp;#8211; if everything we use will get so amazingly scalable, who should we bash? luckily there are microsoft and buzz.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://designreviver.com/tips/exploring-the-new-features-of-css3/&quot;&gt;New features of CSS3&lt;/a&gt; &amp;#8211; i am still refusing to jump on that wagon until at least all major browsers show decent support.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://addyosmani.com/blog/the-ultimate-guide-to-javascript-in-web-design/&quot;&gt;Effectively using javascript in web design&lt;/a&gt; &amp;#8211; a nice writeup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://fuelyourcoding.com/set-rails-logging-on-fire/&quot;&gt;Rails logging loves Firebug&lt;/a&gt; &amp;#8211; could be nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://hmarr.com/2010/mar/18/full-text-search-with-mongodb/&quot;&gt;Full text search in MongoDB&lt;/a&gt; &amp;#8211; a simple full text search engine, that uses MongoDB as its backend.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nosql.mypopescu.com/post/456418620/learn-mongodb-in-104-slides&quot;&gt;Learn MongoDB in 104 slides&lt;/a&gt; &amp;#8211; awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://geewax.org/2009/11/21/agile-git-workflow.html&quot;&gt;Agile Git workflow&lt;/a&gt; &amp;#8211; another good, actually very good workflow suggestion.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html&quot;&gt;Justin.tv&amp;#8217;s video broadcasting architecture&lt;/a&gt; &amp;#8211; real time video streaming for millions of users. doin&amp;#8217; it rite.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/nateware/redis-objects&quot;&gt;redis-objects&lt;/a&gt; &amp;#8211; Map Redis types directly to Ruby objects.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.datejs.com/&quot;&gt;DateJS&lt;/a&gt; &amp;#8211; something like Chronic for javascript, awesome date and time management.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/pauldix/typhoeus&quot;&gt;Typhoeus&lt;/a&gt; &amp;#8211; As a pro &lt;code&gt;Net::HTTP&lt;/code&gt; hater, i find this one really nice.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/336544&quot;&gt;Who needs &lt;span class=&quot;caps&quot;&gt;HAML&lt;/span&gt;?&lt;/a&gt; &amp;#8211; &amp;#8220;when you got &lt;span class=&quot;caps&quot;&gt;YAML&lt;/span&gt;&amp;#8221;, thinks Jose Valim.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/micha/resty&quot;&gt;Resty&lt;/a&gt; &amp;#8211; Little command line &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt; interface that you can use in pipelines (bash or zsh).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/alexyoung/jschat&quot;&gt;jsChat&lt;/a&gt; &amp;#8211; &lt;span class=&quot;caps&quot;&gt;JSON&lt;/span&gt;-based chat that has web and console clients, and a server.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ruby-audioinfo.rubyforge.org/&quot;&gt;Ruby Audio info&lt;/a&gt; &amp;#8211; ruby-audioinfo glue together various audio ruby libraries and presents a unified &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; to the developper. Currently, supported formats are: mp3, ogg, mpc, ape, wma, flac, aac, mp4, m4a. some writes are available too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/menno/cloudfront_asset_host&quot;&gt;CloudFront asset_host&lt;/a&gt; &amp;#8211; Easy deployment of your assets on CloudFront for Rails.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://masonoise.wordpress.com/2010/03/17/redis-cheat-sheet-v1-0/&quot;&gt;Redis CheatSheet&lt;/a&gt; &amp;#8211; weee.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/ryanb/ruby-warrior&quot;&gt;Ruby-warrior&lt;/a&gt; &amp;#8211; a ruby AI game.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://randomkeygen.com/&quot;&gt;Random Key generator&lt;/a&gt; &amp;#8211; random password generator.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 15/3/2010</title>
   <link href="http://blog.eizesus.com/2010/03/bag-o-links-15-3-2010"/>
   <updated>2010-03-15T00:00:00-04:00</updated>
   <id>http://gitready.com/2010/03/bag-o-links-15-3-2010</id>
   <content type="html">&lt;h4&gt;Links&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://community.pivotaltracker.com/pivotal/topics/is_there_a_way_to_do_basic_time_tracking_spent_on_a_story?utm_medium=widget&amp;amp;utm_source=widget_pivotal&amp;amp;from_gsfn=true&quot;&gt;Enable time tracking in Pivotal Tracker&lt;/a&gt; &amp;#8211; This is another good service from those guys at pivotal.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tjkdesign.com/ez-css/css/base.css&quot;&gt;a good basic &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt;&lt;/a&gt; &amp;#8211; I find this one useful, pretty sure i posted it a few weeks/days ago but i can&amp;#8217;t find it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.mindscape.co.nz/staff/johndaniel/index.php/2010/03/business-porn-the-company-dashboard/&quot;&gt;Statusboards roundup&lt;/a&gt; &amp;#8211; Ours is cooler, but i need to find a way to post a picture that is not completely blurred. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.napcsweb.com/blog/2010/03/11/basic-authentication-in-ruby-on-rails-in-case-you-forgot/&quot;&gt;Basic authentication in Ruby on Rails, in case you forgot&lt;/a&gt; &amp;#8211; Brian refreshes your memory.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.humblesoftware.com/finance/index&quot;&gt;Awesome HTML5 google-like charts&lt;/a&gt; &amp;#8211; screw you IE, srsly.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://robots.thoughtbot.com/post/443934722/redis-data-cheeseburgers&quot;&gt;Redis tutorial&lt;/a&gt; &amp;#8211; from the dudes in ThoughtBot.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://mrtopf.de/blog/podcast/nosqllive_scaling/&quot;&gt;Scaling with noSQL&lt;/a&gt; &amp;#8211; a talk from noSQL live in boston.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://shiftcommathree.com/articles/how-to-install-mongodb-on-os-x&quot;&gt;Install MongoDB on MacOS&lt;/a&gt; &amp;#8211; don&amp;#8217;t use Macports, it sucks.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.nahurst.com/visual-guide-to-nosql-systems&quot;&gt;Visual Guide to noSQL systems&lt;/a&gt; &amp;#8211; a graphic explanation about this fascinating ecosystem.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://html5doctor.com/i-b-em-strong-element&quot;&gt;Semantic I and B tags?&lt;/a&gt; &amp;#8211; author raises a good point here. although i&amp;#8217;m a fan of &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;, this article makes some kind of sense.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.alfajango.com/blog/make-sure-your-rails-application-is-actually-caching-and-not-just-pretending/&quot;&gt;Make sure your Rails application is cacheing properly&lt;/a&gt; &amp;#8211; Good idea to double-check apache/nginx too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://git.wiki.kernel.org/index.php/GitFaq&quot;&gt;Git Faq&lt;/a&gt; &amp;#8211; real life questions answered. good resource. (might wanna read this &lt;a href=&quot;http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html&quot;&gt;post&lt;/a&gt; from ReinH about Git workflows in agile teams)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://aws-musings.com/7-easy-tips-to-reduce-your-amazon-ec2-cloud-costs/&quot;&gt;7 easy tips to reduce your EC2 cloud expenses&lt;/a&gt; &amp;#8211; #8 &amp;#8211; Use heroku, works for me.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.pythian.com/news/9387/liveblogging-at-confoo-blending-nosql-and-sql/&quot;&gt;Liveblogging at Confoo: Blending NoSQL and &lt;span class=&quot;caps&quot;&gt;SQL&lt;/span&gt;&lt;/a&gt; &amp;#8211; another roundup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://dailyjs.com/2010/03/15/hosting-nodejs-apps/&quot;&gt;Hosting Node.js applicaitons&lt;/a&gt; &amp;#8211; server installation instructions.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://designerwall.co.za/2010/03/60-excellent-css3-tutorials-and-techniques-you-should-know/&quot;&gt;CSS3 tutorials and tricks you should now&lt;/a&gt; &amp;#8211; same as the above.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://designingfortheweb.co.uk/book/index.php&quot;&gt;Designing for the web&lt;/a&gt; &amp;#8211; free book, &lt;strong&gt;a must read&lt;/strong&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://ayende.com/Blog/archive/2010/03/14/map-reduce-ndash-a-visual-explanation.aspx&quot;&gt;MapReduce: explained with pictures!&lt;/a&gt; &amp;#8211; i still only partially get it. :)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://drnicwilliams.com/2010/03/15/using-coffeescript-in-rails-and-even-on-heroku/&quot;&gt;Using coffeescript in Rails and even Heroku&lt;/a&gt; &amp;#8211; another winner from Dr. Nic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.eucalyptus.com/&quot;&gt;Eucalyptus&lt;/a&gt; &amp;#8211; thinking about running your own cloud ? this is a good toy to use.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://pastie.org/private/xnslbf3exarosmeqbahq&quot;&gt;one of the worst controller codes ever&lt;/a&gt; &amp;#8211; thanks &lt;a href=&quot;http://twitter.com/anathematic&quot;&gt;@anathematic&lt;/a&gt;. (just the messanger, not the actual author of this hell raised code).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/reddavis/Naive-Bayes&quot;&gt;Naive-Bayes&lt;/a&gt; &amp;#8211; Simple Naive Bayes classifier.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/reductivelabs/puppet-dashboard/&quot;&gt;puppet-manager&lt;/a&gt; &amp;#8211; a web interface for Puppet.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/smparkes/env-js&quot;&gt;envJS&lt;/a&gt; &amp;#8211; A pure-JavaScript browser environment with early rubygem support. wow.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.1stwebdesigner.com/freebies/best-free-web-user-interface-icons/&quot;&gt;Ultimate roundup of free UI icons&lt;/a&gt; &amp;#8211; cool.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.tuttoaster.com/showcase-of-excellent-tables-and-best-practices/&quot;&gt;Showcase of excellent table designs&lt;/a&gt; &amp;#8211; really good stuff.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.net-kit.com/html5-css3-layout-tutorials-and-templates/&quot;&gt;HTML5 and CSS3 templates&lt;/a&gt; &amp;#8211; when this HTML5 things will grow teeth, that would be awesome.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mtrudel/menutree&quot;&gt;MenuTree&lt;/a&gt; &amp;#8211; a simple hierachical command line shell.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/delano/benelux&quot;&gt;Benelux&lt;/a&gt; &amp;#8211; Benchmarking sugar for ruby.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Bag O' Links - 10/3/2010</title>
   <link href="http://blog.eizesus.com/2010/03/bag-o-links-10-3-2010"/>
   <updated>2010-03-10T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/03/bag-o-links-10-3-2010</id>
   <content type="html">&lt;h4&gt;Links&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://lucidcode.co.nz/blog/archives/2010/03/02/testing-email-delivery-in-rails-with-gmail-httparty/&quot;&gt;Use HTTParty to test emails to GMail&lt;/a&gt; &amp;#8211; nice trick.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/322391&quot;&gt;Test execution time of a ruby block&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://www.ryanbigg.com&quot;&gt;@ryanbigg&lt;/a&gt; with a useful tip.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/sinatra/following&quot;&gt;Sinatra&amp;#8217;s follwoing list on Github&lt;/a&gt; &amp;#8211; A good list of resources on Sinatra.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.viddler.com/explore/kblake/videos/&quot;&gt;Ruby and Rails chops&lt;/a&gt; &amp;#8211; some more Rails screencasts.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://blog.hasmanythrough.com/2008/2/27/count-length-size&quot;&gt;size vs. count vs. length&lt;/a&gt; &amp;#8211; Some differences caused by ActiveRecord.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://neeraj.name/2010/03/11/prototypal-inheritance-in-javascript.html&quot;&gt;Prototypal inheritance with Javascript&lt;/a&gt; &amp;#8211; a brief explanation.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://macperformanceguide.com/index.html&quot;&gt;Mac Performance guide&lt;/a&gt; &amp;#8211; good tips and pointers when choosing a Mac. (Thanks &lt;a href=&quot;http://afreshcup.com&quot;&gt;mike&lt;/a&gt; !)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://mrdoob.com/lab/javascript/harmony/#sketchy&quot;&gt;Sketchy&lt;/a&gt; &amp;#8211; this is by far, the best web based drawing tool i&amp;#8217;ve seen.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://nicolasgallagher.com/demo/pure-css-speech-bubbles/bubbles.html&quot;&gt;Pure &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; bubbles&lt;/a&gt; &amp;#8211; win, this should work on the evil browsers as well with some common js hacks.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2010/03/08/entering-the-wonderful-world-of-geo-location/&quot;&gt;Geo location with javascript&lt;/a&gt; &amp;#8211; another awesome writeup by smashing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Treasures&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/glasner/nimble_nodes&quot;&gt;nimble_nodes&lt;/a&gt; &amp;#8211; Automatic scaling for Heroku Dynos. haven&amp;#8217;t tried it but it does seem to be a nice solution, especially if you could set a threshold to your payments.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://iamneato.com/2010/01/03/speks-for-node&quot;&gt;speks for Node.js&lt;/a&gt; &amp;#8211; an RSpec-alike library for Node.js which is quiet nice actually.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/remail-iphone/&quot;&gt;remail is now opensourced&lt;/a&gt; &amp;#8211; a successful and recently purchased by Google iPhone application is opensource, good to read.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://oncloud.org/&quot;&gt;oncloud&lt;/a&gt; &amp;#8211; a really nice service that allow quick exposure of a rails app.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://gist.github.com/326227&quot;&gt;Examples of ActionMailer parameters&lt;/a&gt; &amp;#8211; from Redmine.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/futurechimp/enigmamachine&quot;&gt;EnigmaMachine&lt;/a&gt; &amp;#8211; A queue based video encoder.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/plataformatec/show_for&quot;&gt;show_for&lt;/a&gt; &amp;#8211; Dry your model&amp;#8217;s attribute display views.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/benpickles/js-model&quot;&gt;js_model&lt;/a&gt; &amp;#8211; a simple &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; to create models in Javascript. includes validation and other fun stuff.. requires jQueyr tho.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://tjkdesign.com/ez-css/css/base.css&quot;&gt;A comprehensive &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; reset and basic layout document&lt;/a&gt; &amp;#8211; and a really good one.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.spritely.net/&quot;&gt;spritely&lt;/a&gt; &amp;#8211; a really, &lt;span class=&quot;caps&quot;&gt;REALLY&lt;/span&gt; impressive animation plugin for jquery. claims to compete with Flash too.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.panic.com/blog/2010/03/the-panic-status-board/&quot;&gt;The panic status board&lt;/a&gt; &amp;#8211; Pretty awesome implementation of a team-status viewer.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mislav/twitter-login&quot;&gt;Login with twitter to your application, Rack version&lt;/a&gt; &amp;#8211; might, just might, be useful.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/seamusabshere/data_miner&quot;&gt;DataMiner&lt;/a&gt; &amp;#8211; Download and import &lt;span class=&quot;caps&quot;&gt;XLS&lt;/span&gt;, &lt;span class=&quot;caps&quot;&gt;ODS&lt;/span&gt;, &lt;span class=&quot;caps&quot;&gt;XML&lt;/span&gt;, &lt;span class=&quot;caps&quot;&gt;CSV&lt;/span&gt; into your active record models. It&amp;#8217;s a little bit weird and out of context imo, but it might develop into something interesting.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/mocoso/cucumber-screenshot&quot;&gt;cucumber-screenshots&lt;/a&gt; &amp;#8211; capture screenshots of the pages generated by your Rails application as it runs your Cucumber/Webrat features (webkit only). For the other platform &lt;a href=&quot;http://github.com/aslakhellesoy/cucumber/blob/master/examples/watir/features/support/screenshots.rb&quot;&gt;Watir&lt;/a&gt; will do the trick.&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Creating a Rails authentication system on Mongoid Part 3 - Password Resets</title>
   <link href="http://blog.eizesus.com/2010/03/creating-a-rails-authentication-system-on-mongoid-part-3-password-resets-8-3-2010"/>
   <updated>2010-03-08T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/03/creating-a-rails-authentication-system-on-mongoid-part-3-password-resets-8-3-2010</id>
   <content type="html">&lt;p&gt;In the last &lt;a href=&quot;http://blog.eizesus.com/2010/03/creating-a-rails-authentication-system-on-mongoid-part-2-7-3-2010/&quot;&gt;post&lt;/a&gt; we added some functionality to our authentication system. We added a &amp;#8220;Remember me&amp;#8221; functionality to allow users to log in using a cookie and we also added an activation process that authenticates the email address we get from the user.&lt;/p&gt;
&lt;p&gt;On this post, i&amp;#8217;ll cover &lt;strong&gt;password resets&lt;/strong&gt;:&lt;/p&gt;
&lt;h4&gt;Password Resets&lt;/h4&gt;
&lt;p&gt;The logic behind a password reset process is rather simple, basically it is very similar to the &lt;strong&gt;activation&lt;/strong&gt; process we did before.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;We create some kind of a temporary (perishable) token that identifies the user who wishes to reset the password.&lt;/li&gt;
	&lt;li&gt;We send the user an email with a link that contains that token and leads to a page that allows the user to choose a new password.&lt;/li&gt;
	&lt;li&gt;We update the new password, and start dancing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;User.rb&lt;/h5&gt;
&lt;p&gt;First, we are going to add a field that will contain that reset token, and a method to generate it when required:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/325301.js?file=user.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;That&amp;#8217;s basically it.&lt;/p&gt;
&lt;h5&gt;UsersController&lt;/h5&gt;
&lt;p&gt;We need to add a few actions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;one to generate the token and trigger the reset password email.&lt;/li&gt;
	&lt;li&gt;one to show a &amp;#8220;reset password&amp;#8221; form with password and password confirmation field.&lt;/li&gt;
	&lt;li&gt;and last, an action to save the new password and log in the user. We can&amp;#8217;t use the &lt;code&gt;#update&lt;/code&gt; action because we need a little different behavior that i think is enough to justify a separate action: First we need to find the user record based on a token not by &lt;code&gt;id&lt;/code&gt; and second, we need to use our &lt;code&gt;logout_keeping_session&lt;/code&gt; to make sure no malicious changes are made to a logged in user if it exists.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The process will work like that:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The user will be able to go on a form and enter his email in case they forgot the password, that action will be &lt;code&gt;UsersController#forgot_password&lt;/code&gt;.&lt;/li&gt;
	&lt;li&gt;If the user entered a valid email address (and one that identifies a user on the application), then &lt;code&gt;UsersController#send_password_reset&lt;/code&gt; will generate a new reset token and send the user with reset instructions.&lt;/li&gt;
	&lt;li&gt;When the user follows the reset link on the email, they&amp;#8217;ll arrive on &lt;code&gt;UsersController#reset_password&lt;/code&gt; that will match the reset token from the &lt;span class=&quot;caps&quot;&gt;URI&lt;/span&gt; to a specific user on the system and allow the user to enter a new password if matched.&lt;/li&gt;
	&lt;li&gt;Once the user had changed and saved the password, they will be logged off and asked to re-login with their new password.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;#8217;s the current &lt;code&gt;UsersController&lt;/code&gt;:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/325973.js?file=users_controller.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;Source for the &lt;a href=&quot;http://gist.github.com/325981&quot;&gt;UsersController#forgot_password view&lt;/a&gt;, &lt;a href=&quot;http://gist.github.com/325982&quot;&gt;UsersController#send_password_reset view&lt;/a&gt;, &amp;#8220;UserMailer model&amp;#8221;http://gist.github.com/325983, &lt;a href=&quot;http://gist.github.com/325984&quot;&gt;Reset instructions mail template&lt;/a&gt; and &lt;a href=&quot;http://gist.github.com/325986&quot;&gt;UsersController#reset_password&lt;/a&gt; added.&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Again, it seems that we tackled most of the problems we had with Mongoid in the early stages and practically nothing bothered us too much since the first part of this series.&lt;/p&gt;
&lt;p&gt;I keep the implementation of a background processor until a bit later, it is not that important at this stage so we&amp;#8217;ll get back to it later.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Creating a Rails authentication system on Mongoid Part 2 - Remember me and Account activation</title>
   <link href="http://blog.eizesus.com/2010/03/creating-a-rails-authentication-system-on-mongoid-part-2-7-3-2010"/>
   <updated>2010-03-07T00:00:00-05:00</updated>
   <id>http://gitready.com/2010/03/creating-a-rails-authentication-system-on-mongoid-part-2-7-3-2010</id>
   <content type="html">&lt;p&gt;On the first part of &lt;a href=&quot;http://blog.eizesus.com/2010/03/creating-a-rails-authentication-system-on-mongoid/&quot;&gt;Creating a Rails authentication system on Mongoid&lt;/a&gt; we tackled the basic structure of our authentication system. In this part we&amp;#8217;ll tackle our need in creating a &amp;#8220;Remember me&amp;#8221; functionality to allow users to login from a cookie and a basic account activation process.&lt;/p&gt;
&lt;p&gt;As a general thumb rule to this experience we try not to re-invent the wheel when we can, which basically means that we look at the existing authentication libraries source code and try to see if it has some kind of a problem on Mongo, if it doesn&amp;#8217;t we use it and i if does we fix it as you read in the first part.&lt;/p&gt;
&lt;p&gt;Out of all the authentication libraries we examined (and dropped for this cause) the one i liked the most and in my opinion the simplest yet complete is &amp;#8220;Restful Authentication&amp;#8221;, so we chose it as our base line and we use code snippets from it when ever we can.&lt;/p&gt;
&lt;h4&gt;Remember me?&lt;/h4&gt;
&lt;p&gt;The remember me functionality allows the user to login using a generated token that is found on a cookie we create, this allows the user to login without putting his user name and password &lt;strong&gt;everytime&lt;/strong&gt; they want to login as long as the cookie was not expired.&lt;/p&gt;
&lt;p&gt;The first thing we need to do to allow a login from cookie, is to get our User model familiar with some new fields and methods to make that process possible.&lt;/p&gt;
&lt;p&gt;First, we need to add a few fields to our user document and a add a few methods to instance and class, this is our new &lt;code&gt;User.rb&lt;/code&gt;:&lt;/p&gt;
&lt;h5&gt;User.rb changes&lt;/h5&gt;
&lt;p&gt;We changed &lt;code&gt;User.rb&lt;/code&gt; a bit:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/324635.js?file=User.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;We &lt;strong&gt;added 2 fields&lt;/strong&gt;, &lt;code&gt;remember_token_expires_at&lt;/code&gt; and &lt;code&gt;remember_token&lt;/code&gt;, both to keep a token and and an expiry limit.&lt;br /&gt;
We also added the following instance methods:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;remember_token?&lt;/strong&gt; &amp;#8211; determines if a token should and can be remembered.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;remember_me&lt;/strong&gt; &amp;#8211; generates and saves the token and expiry limit.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;refresh_token&lt;/strong&gt; &amp;#8211; creates a new token.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;forget_me&lt;/strong&gt; &amp;#8211; cleans the token and expiry limit fields.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;we also added the following class methods:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;User.secure_digest&lt;/strong&gt; &amp;#8211; a wrapper to our encryption method.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;User.make_token&lt;/strong&gt; &amp;#8211; generates a new token.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that we changed some of the options for our session management, we will need to update &lt;code&gt;sessions_controller&lt;/code&gt; and &lt;code&gt;application_controller&lt;/code&gt; as well.&lt;/p&gt;
&lt;h5&gt;ApplicationController changes&lt;/h5&gt;
&lt;p&gt;In the end of Part 1, i gave an example to some methods that should be on &lt;code&gt;application_controller&lt;/code&gt; in order to make the session management and the entire authentication process easier. Since those were just examples and were meant barely to support basic usage, we will need to go through it a bit more seriously and create a more precise and smart &lt;code&gt;application_controller&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this case, we can simply grab all the methods from Restful Authentication&amp;#8217;s &lt;code&gt;authentication.rb&lt;/code&gt; module, and weld it to our &lt;code&gt;application_controller&lt;/code&gt;:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/324641.js?file=application_controller.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;we added a few methods and changed a few existing ones, this is pretty straight forward and basically a 1:1 copy from Restful Authentication, the only important thing to really pay attention to are the &lt;code&gt;current_user&lt;/code&gt; and the &lt;code&gt;current_user=&lt;/code&gt; which are different than what we had in my previous example and now takes more into consideration (cookies and HTTPauth for example.)&lt;/p&gt;
&lt;p&gt;Since now we have a getter for &lt;code&gt;current_user&lt;/code&gt; we need to change our &lt;code&gt;sessions_controller&lt;/code&gt; too.&lt;/p&gt;
&lt;h5&gt;SessionsController changes&lt;/h5&gt;
&lt;p&gt;This is our current &lt;code&gt;sessions_controller&lt;/code&gt;:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/324647.js?file=sessions_controller.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;note the &amp;#8220;remember me&amp;#8221; functionality consideration and the usage of our cookie-based-login methods from &lt;code&gt;application_controller&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now you can simply add a checkbox named &amp;#8220;remember_me&amp;#8221; to your &lt;code&gt;SessionsController#new&lt;/code&gt; form, but i am sure you can do that without a gist :)&lt;/p&gt;
&lt;h4&gt;Activation&lt;/h4&gt;
&lt;p&gt;&amp;#8220;Account Activation&amp;#8221; is generally a process that is meant to make sure the user who filled the registration form really has access to the email account by sending that address a message with a token-generated link that upon clicked, proves ownership of this email address and activates the account.&lt;/p&gt;
&lt;h5&gt;User.rb&lt;/h5&gt;
&lt;p&gt;We had to find a solution to annotate the user instance with it&amp;#8217;s current activation status, with that given we figured we have 2 options to tackle it:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;simple add a boolean field to store the current activation status&lt;/li&gt;
	&lt;li&gt;use some kind of a state machine that will allow us some more flexibility later&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bearing in mind that we won&amp;#8217;t need more than a single status, we decided to go with the first option and simply add an &lt;code&gt;active&lt;/code&gt; boolean field, an &lt;code&gt;activation_code&lt;/code&gt; token field and an &lt;code&gt;activated_at&lt;/code&gt; timestamp. we also added those fields to our &lt;code&gt;attr_protected&lt;/code&gt; list since we don&amp;#8217;t really want them changed by mass-assignment.&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/324659.js?file=user.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;We also added a simple &lt;code&gt;before_create&lt;/code&gt; methods that will generate an activation token for our user and a method to &lt;code&gt;activate!&lt;/code&gt; the user.&lt;/p&gt;
&lt;p&gt;Given the key step in an activation process is the step where your application sends the user an email message with the activation link so we&amp;#8217;ll need to find a good way to send out an activation email when a user is created.&lt;/p&gt;
&lt;p&gt;As far as outgoing emails best practices goes, it&amp;#8217;s better not to preform the &lt;code&gt;ActionMailer#deliver_...&lt;/code&gt; method in the controller itself, but to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Use an observer that will send that email when the current callback is fired. In our case that would be an &lt;code&gt;after_create&lt;/code&gt; observer on the User model.&lt;/li&gt;
	&lt;li&gt;Offload the task to some kind of a background processor such as DelayedJob or Resque.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A quick check in the Mongoid source-code revealed that we don&amp;#8217;t have support for Observers so that option is ruled out (again, until a patch arrives). As for a background processor, while DelayedJob has an ActiveRecord dependency Resque is pretty much free and relies on Redis so we decided to use Resque in our application.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll cover the email management on one of the next posts, but for now we&amp;#8217;ll just use an &lt;code&gt;after_create&lt;/code&gt; callback on the User model that will perform a regular &lt;code&gt;ActionMailer&lt;/code&gt; delivery.&lt;/p&gt;
&lt;h5&gt;UsersController changes (and a bonus mailer)&lt;/h5&gt;
&lt;p&gt;Since we take care of the email notification on the model level (for now, until we offload it to a background processor later) we don&amp;#8217;t need to change our &lt;code&gt;UsersController#create&lt;/code&gt; methods, but we do need to add an action that will take care of the activation for us:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/324700.js?file=users_controller.rb&quot;&gt;&lt;/script&gt;&lt;p&gt;Remember to update your routes and either:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;add a &lt;code&gt;:collection =&amp;gt; {:activate =&amp;gt; :get}&lt;/code&gt; to your &lt;code&gt;map.users&lt;/code&gt; routes.&lt;/li&gt;
	&lt;li&gt;add a named route like &lt;code&gt;map.activate '/users/activate/:activation_code, :controller =&amp;gt; 'users', :action =&amp;gt; 'activate'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;we chose to add a &lt;strong&gt;named route&lt;/strong&gt;, just because it makes more sense and that the &lt;code&gt;activate&lt;/code&gt; action is not a collection action, but not one that requires an &lt;code&gt;id&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;Here are a &lt;a href=&quot;http://gist.github.com/324719&quot;&gt;sample user mailer&lt;/a&gt; and an &lt;a href=&quot;http://gist.github.com/324722&quot;&gt;activation mail view&lt;/a&gt; if you really need them :)&lt;/p&gt;
&lt;h4&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;In this part we didn&amp;#8217;t ran into &lt;strong&gt;that&lt;/strong&gt; many issues because we use Mongoid, the only real problem was the lack of observers but since we are going to offload the email sending process to a background processor, it doesn&amp;#8217;t really matter.&lt;br /&gt;
In the next part, we&amp;#8217;ll tackle password resets and background processing.&lt;/p&gt;</content>
 </entry>
 
 
</feed>