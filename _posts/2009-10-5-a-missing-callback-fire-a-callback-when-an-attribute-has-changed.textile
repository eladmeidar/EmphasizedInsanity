--- 
title: "A missing Rails callback?: fire a callback when an attribute has changed"
layout: post
---
Rails callbacks are awesome, it's probably the most magical piece of code (aside from the demonic initializer) that i have seen in the source and we all use it in our controllers and models to enforce some DRY code and conventions over your application.

Lately, i came into realize, that there might be a missing callback in Rails. an <code>when_attribute_changed</code> callback that fires when you change an attribute.
Thanks to the <code>ActiveRecord::Dirty</code> magic, it's very easy to be aware of where and when an attribute was changed and maybe try to wrap that out, but i was looking for something more accurate that wouldn't require me to invoke <code>changed?</code> on every attribute.

So after digging a while in the Rails source code (Thanks to the "Bugmash":http://wiki.railsbridge.org/projects/railsbridge/wiki/BugMash, it's pretty easy to navigate through nowadays), i found that he base attribute handling is done with the write_attribute method so you should be ear-dropping into it.

This is a module that binds the <code>attribute_changed</code> custom callback and fires it off on when an attribute is changed. The default method that handles this exception is named <code>flag_attribute_changed</code>, but you can overwrite it as you like

<script src="http://gist.github.com/201879.js"></script>

although this is a nice roundup, i still haven't found a way to restrict it to apply only on specific attributes. open to ideas.

