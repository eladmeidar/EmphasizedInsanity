--- 
title: Deploying Ruby on Rails on EC2 - Update
layout: post
---
<a href="http://www.linkedin.com/in/tmornini">Tom Mornini</a>, the Founder and CTO of EngineYard, introduced me their latest announcement, <a href="http://www.engineyard.com/solo">Solo</a>.<br />
<quote>Solo is an inexpensive, web-based platform for on-demand management of your Ruby on Rails web application on Amazon’s cloud computing infrastructure. Manage your web application from development to deployment. You get Engine Yard’s Ruby on Rails deployment expertise wrapped in an easy-to-use interface.</quote><br />
Solo removes a lot of the hassles and provides a battle tested Rails stack and many tools required to create reliable and manageable deployment atop Amazon's wonderful AWS offerings.<br />
<br />
Tom also mentions that using my <a href="http://blog.eizesus.com/2009/01/rails-and-amazon-ec2-beginners-guide.html">Deploying on Ruby on Rails on EC2</a> guide is not recommended for production stages and that users on AWS should always keep in mind that in case of a crash or reboot of the environment will result in lost data (without proper countermeasures, like EngineYard offers)<br />
<br />
So your setup scenario as i suggested, should be used for development only, and carefully even in that case and keep in mind the non-persistence state of EC2 instance disks.
